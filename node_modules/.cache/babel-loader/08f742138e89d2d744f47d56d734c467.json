{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/product/ProductPage.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mainImage: '',\n      product: undefined,\n      attributes: {}\n    };\n  }\n\n  selectAndLoadCategory() {\n    const foundCategory = this.props.categories.find(x => x === this.props.category);\n\n    if (foundCategory) {\n      this.props.selectCategory(foundCategory);\n      this.props.requestProducts(foundCategory);\n    } else {\n      window.location.href = '/';\n    }\n  }\n\n  componentDidMount() {\n    this.selectAndLoadCategory();\n  }\n\n  componentDidUpdate() {\n    this.selectAndLoadCategory();\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    var _current_state$produc;\n\n    if (((_current_state$produc = current_state.product) === null || _current_state$produc === void 0 ? void 0 : _current_state$produc.id) !== props.product) {\n      return {\n        product: props.products.find(x => x.id === props.product)\n      };\n    }\n\n    return null;\n  }\n\n  setAttributes(value) {\n    this.setState({\n      attributes: value\n    });\n  }\n\n  render() {\n    const product = this.state.product;\n\n    if (!product) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-images\",\n          children: product.gallery.map(x => /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            className: \"side-image\",\n            src: x,\n            onClick: () => {\n              this.setState({\n                mainImage: x\n              });\n            }\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-image-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.mainImage.length > 0 ? this.state.mainImage : product.gallery[0],\n              alt: product.id,\n              className: \"main-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButtons, {\n              product: product,\n              attributes: this.state.attributes,\n              setAttributes: this.setAttributes.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), product.prices.map(x => x.currency === this.props.selectedCurrency && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', x.amount]\n            }, Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 36\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.props.addCartItem({ ...product,\n                attrValues: this.state.attributes\n              }),\n              className: \"add-to-cart-button\",\n              children: \"Add to cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"product-description\",\n              dangerouslySetInnerHTML: {\n                __html: product.description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    products: state.products.list,\n    categories: state.categories.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  selectCategory,\n  requestProducts\n})(ProductPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/product/ProductPage.jsx"],"names":["React","currenciesSymbols","ToggleButtons","Wrapper","connect","addCartItem","selectCategory","requestProducts","ProductPage","Component","constructor","state","mainImage","product","undefined","attributes","selectAndLoadCategory","foundCategory","props","categories","find","x","category","window","location","href","componentDidMount","componentDidUpdate","getDerivedStateFromProps","current_state","id","products","setAttributes","value","setState","render","gallery","map","length","brand","name","bind","prices","currency","selectedCurrency","amount","Math","random","attrValues","__html","description","mapStateToProps","currencies","selected","list"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\n\n\nclass ProductPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            mainImage: '',\n            product: undefined,\n            attributes: {}\n        }\n    }\n\n    selectAndLoadCategory() {\n        const foundCategory = this.props.categories.find(x => x === this.props.category);\n        if (foundCategory) {\n            this.props.selectCategory(foundCategory);\n            this.props.requestProducts(foundCategory);\n        } else {\n            window.location.href = '/';\n        }\n    }\n\n    componentDidMount() {\n        this.selectAndLoadCategory();\n    }\n\n    componentDidUpdate() {\n        this.selectAndLoadCategory();\n    }\n\n    static getDerivedStateFromProps(props, current_state) {\n        if (current_state.product?.id !== props.product) {\n            return {\n                product: props.products.find(x => x.id === props.product)\n            }\n        }\n        return null\n    }\n\n    setAttributes(value) {\n        this.setState({\n            attributes: value\n        });\n    }\n\n    render() {\n\n        const product = this.state.product;\n\n        if (!product) {\n            return null;\n        }\n\n        return (\n            <Wrapper>\n                <div className=\"wrapper\">\n                    <div className=\"side-images\">\n                        {\n                            product.gallery.map(x => <img key={x} alt=\"\"\n                                className=\"side-image\"\n                                src={x}\n                                onClick={() => {\n                                    this.setState({\n                                        mainImage: x\n                                    });\n                                }}></img>)\n                        }\n                    </div>\n                    <div className=\"product-wrapper\">\n                        <div className=\"main-image-wrapper\"><img src={this.state.mainImage.length > 0\n                            ? this.state.mainImage\n                            : product.gallery[0]}\n                            alt={product.id}\n                            className=\"main-image\"></img>\n                        </div>\n                        <div key={product.id} className=\"product-info\">\n                            <h3>{product.brand}</h3>\n                            <p>{product.name}</p>\n                            <ToggleButtons\n                                product={product}\n                                attributes={this.state.attributes}\n                                setAttributes={this.setAttributes.bind(this)}\n                            />\n                            <h4>Price:</h4>\n                            {product.prices.map(x => x.currency === this.props.selectedCurrency\n                                && <p key={Math.random()} className=\"price\">{currenciesSymbols[this.props.selectedCurrency] || '$'}\n                                    {x.amount}</p>)}\n                            <button\n                                onClick={() => this.props.addCartItem({ ...product, attrValues: this.state.attributes })}\n                                className=\"add-to-cart-button\">\n                                Add to cart\n                            </button>\n                            <p className=\"product-description\" dangerouslySetInnerHTML={{ __html: product.description }}></p>\n                        </div>\n                    </div>\n                </div>\n\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        products: state.products.list,\n        categories: state.categories.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, selectCategory, requestProducts }\n)(ProductPage);"]},"metadata":{},"sourceType":"module"}