{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  uri: 'http://localhost:4000/graphql',\n  // Provide some optional constructor fields\n  name: 'react-web-client',\n  version: '1.3',\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network'\n    }\n  }\n});\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      gallery: []\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n                gallery\n              }\n            }\n          }\n        `\n    }).then(result => this.setState(prevState => ({\n      name: result.data.category.products.map(prod => prod.name),\n      gallery: result.data.category.products.map(prod => prod.gallery)\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [imgObject.outOfStock === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : \"\", console.log(this.state.name, this.state.gallery), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","ApolloClient","InMemoryCache","gql","cache","client","uri","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","ProductCard","Component","constructor","props","state","names","gallery","componentDidMount","query","then","result","setState","prevState","data","category","products","map","prod","render","imgObject","outOfStock","console","log","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,KAAK,GAAG,IAAIF,aAAJ,EAAd;AAEA,MAAMG,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9B;AACAG,EAAAA,KAAK,EAAEA,KAFuB;AAG9BE,EAAAA,GAAG,EAAE,+BAHyB;AAK9B;AACAC,EAAAA,IAAI,EAAE,kBANwB;AAO9BC,EAAAA,OAAO,EAAE,KAPqB;AAQ9BC,EAAAA,kBAAkB,EAAE,KARU;AAS9BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AADE;AATc,CAAjB,CAAf;AAgBA,OAAO,MAAMC,WAAN,SAA0Bd,KAAK,CAACe,SAAhC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,MAAM,CACHgB,KADH,CACS;AACLA,MAAAA,KAAK,EAAElB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXa,KADT,EAcGmB,IAdH,CAcSC,MAAD,IACJ,KAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BlB,MAAAA,IAAI,EAAEgB,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BC,GAA9B,CAAmCC,IAAD,IAAWA,IAAI,CAACvB,IAAlD,CADsB;AAE5BY,MAAAA,OAAO,EAAEI,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BC,GAA9B,CAAmCC,IAAD,IAAWA,IAAI,CAACX,OAAlD;AAFmB,KAAhB,CAAd,CAfJ;AAoBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,iBAIAC,SAAS,CAACC,UAAV,KAAyB,IAAzB,gBACC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EAPD,EASAC,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWV,IAAvB,EAA6B,KAAKU,KAAL,CAAWE,OAAxC,CATA,eAWD;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAXC,eAYD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZC;AAAA,OACIiB,IAAI,CAACC,MAAL,KAAgB,EADpB;AAAA;AAAA;AAAA;AAAA,YAAP;AAiBD;;AAlD8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport gql from 'graphql-tag';\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  uri: 'http://localhost:4000/graphql',\n\n  // Provide some optional constructor fields\n  name: 'react-web-client',\n  version: '1.3',\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network',\n    },\n  },\n});\n\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      gallery: []\n    };\n  }\n\n  componentDidMount() {\n    client\n      .query({\n        query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n                gallery\n              }\n            }\n          }\n        `,\n      })\n      .then((result) =>\n        this.setState((prevState) => ({\n          name: result.data.category.products.map((prod) => (prod.name)),\n          gallery: result.data.category.products.map((prod) => (prod.gallery)),\n        }))\n      );\n  }\n\n  render() {\n    return <div\n          key={Math.random() * 10}\n        //   className={imgObject.outOfStock === true ? \"card-inactive\" : \"card\"}\n        >\n          {imgObject.outOfStock === true ? (\n            <p className=\"out-of-stock\">Out of stock</p>\n          ) : (\n            \"\"\n          )}\n          {console.log(this.state.name, this.state.gallery)}\n          {/* <img className=\"item-image\" src={imgObject.image}></img> */}\n          <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n          <div className=\"item-info\">\n            <p>Apollo Running Short</p>\n            <p className=\"price\">$50.00</p>\n          </div>\n        </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}