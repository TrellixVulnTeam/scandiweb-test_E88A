{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/header/Dropdown.jsx\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleList = () => {\n      this.setState(prevState => ({\n        isListOpen: !prevState.isListOpen\n      }));\n    };\n\n    this.selectItem = item => {\n      const {\n        resetThenSet\n      } = this.props;\n      const {\n        title,\n        id,\n        key\n      } = item;\n      this.setState({\n        headerTitle: title[0],\n        isListOpen: false\n      }, () => resetThenSet(id, key));\n    };\n\n    this.state = {\n      isListOpen: false,\n      headerTitle: this.props.title\n    };\n  }\n\n  render() {\n    const {\n      isListOpen,\n      headerTitle\n    } = this.state;\n    const {\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"dd-header\",\n        onClick: this.toggleList,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isListOpen ? \"dd-header-title open\" : \"dd-header-title\",\n          children: headerTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), isListOpen ? /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-down\",\n          size: \"2x\",\n          className: \"open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-up\",\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), isListOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"dd-list\",\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"dd-list-item\",\n          onClick: () => this.selectItem(item),\n          children: [item.title, \" \", item.selected]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/header/Dropdown.jsx"],"names":["React","FontAwesome","Dropdown","Component","constructor","props","toggleList","setState","prevState","isListOpen","selectItem","item","resetThenSet","title","id","key","headerTitle","state","render","list","map","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,OAAO,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQN,MAAM;AACjB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADK,OAAhB,CAAd;AAGD,KAZkB;;AAAA,SAcnBC,UAdmB,GAcLC,IAAD,IAAU;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKP,KAA9B;AACA,YAAM;AAAEQ,QAAAA,KAAF;AAASC,QAAAA,EAAT;AAAaC,QAAAA;AAAb,UAAqBJ,IAA3B;AAEA,WAAKJ,QAAL,CACE;AACES,QAAAA,WAAW,EAAEH,KAAK,CAAC,CAAD,CADpB;AAEEJ,QAAAA,UAAU,EAAE;AAFd,OADF,EAKE,MAAMG,YAAY,CAACE,EAAD,EAAKC,GAAL,CALpB;AAOD,KAzBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXR,MAAAA,UAAU,EAAE,KADD;AAEXO,MAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWQ;AAFb,KAAb;AAID;;AAqBDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,UAAF;AAAcO,MAAAA;AAAd,QAA8B,KAAKC,KAAzC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,KAAKd,KAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAA4C,QAAA,OAAO,EAAE,KAAKC,UAA1D;AAAA,gCACE;AACE,UAAA,SAAS,EAAEG,UAAU,GAAG,sBAAH,GAA4B,iBADnD;AAAA,oBAGGO;AAHH;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGP,UAAU,gBACT,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC,IAApC;AAAyC,UAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADS,gBAGT,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAaGA,UAAU,iBAAI;AAAK,QAAA,IAAI,EAAC,MAAV;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA,kBACZU,IAAI,CAACC,GAAL,CAAUT,IAAD,iBACR;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAJjB;AAAA,qBAMGA,IAAI,CAACE,KANR,OAMgBF,IAAI,CAACU,QANrB;AAAA,WAGOV,IAAI,CAACG,EAHZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADY;AAAA;AAAA;AAAA;AAAA,cAbjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AA5D2C","sourcesContent":["import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\n\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListOpen: false,\n      headerTitle: this.props.title,\n    };\n  }\n\n  toggleList = () => {\n    this.setState((prevState) => ({\n      isListOpen: !prevState.isListOpen,\n    }));\n  };\n\n  selectItem = (item) => {\n    const { resetThenSet } = this.props;\n    const { title, id, key } = item;\n\n    this.setState(\n      {\n        headerTitle: title[0],\n        isListOpen: false,\n      },\n      () => resetThenSet(id, key)\n    );\n  };\n\n  render() {\n    const { isListOpen, headerTitle } = this.state;\n    const { list } = this.props;\n\n    return (\n      <div className=\"dd-wrapper\">\n        <button type=\"button\" className=\"dd-header\" onClick={this.toggleList}>\n          <div\n            className={isListOpen ? \"dd-header-title open\" : \"dd-header-title\"}\n          >\n            {headerTitle}\n          </div>\n          {isListOpen ? (\n            <FontAwesome name=\"angle-down\" size=\"2x\" className=\"open\" />\n          ) : (\n            <FontAwesome name=\"angle-up\" size=\"2x\" />\n          )}\n        </button>\n        {isListOpen && <div role=\"list\" className=\"dd-list\">\n          {list.map((item) => (\n            <button\n              type=\"button\"\n              className=\"dd-list-item\"\n              key={item.id}\n              onClick={() => this.selectItem(item)}\n            >\n              {item.title} {item.selected}\n            </button>\n          ))}\n        </div>}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}