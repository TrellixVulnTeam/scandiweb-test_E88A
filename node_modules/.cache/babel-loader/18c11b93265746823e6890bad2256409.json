{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from \"../../redux/actions/cart\";\nimport ToggleButtons from \"../product/ToggleButtons\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), this.props.cartItems.map(item => {\n        var _item$prices$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info-cart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_item$prices$find = item.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _item$prices$find === void 0 ? void 0 : _item$prices$find.amount]\n            }, Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this);\n      }), console.log(this.props.cartItems)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","ToggleButtons","currenciesSymbols","CartPage","Component","render","props","cartItems","map","item","brand","name","selectedCurrency","prices","find","x","currency","amount","Math","random","id","console","log","mapStateToProps","state","currencies","selected","cart","list","products"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACnCC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIQ,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,IAAI;AAAA;;AAAA,4BACzB;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACI;AAAmB,YAAA,SAAS,EAAC,mBAA7B;AAAA,oCACI;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAuB,cAAA,SAAS,EAAC,OAAjC;AAAA,yBACKT,iBAAiB,CAAC,KAAKI,KAAL,CAAWM,gBAAZ,CAAjB,IAAkD,GADvD,4BAC6DH,IAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,KAAKV,KAAL,CAAWM,gBAAhD,CAD7D,sDAC6D,kBAAmEK,MADhI;AAAA,eAAQC,IAAI,CAACC,MAAL,EAAR;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA,aAAUV,IAAI,CAACW,EAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADyB;AAAA,OAA7B,CAJR,EAqBKC,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,SAAvB,CArBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AA3BkC;;AA8BvC,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,gBAAgB,EAAEY,KAAK,CAACC,UAAN,CAAiBC,QADhC;AAEHnB,IAAAA,SAAS,EAAEiB,KAAK,CAACG,IAAN,CAAWC,IAFnB;AAGHC,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeD;AAHtB,GAAP;AAKH,CAND;;AAQA,eAAe7B,OAAO,CAClBwB,eADkB,EAElB;AAAEvB,EAAAA;AAAF,CAFkB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from \"../../redux/actions/cart\";\nimport ToggleButtons from \"../product/ToggleButtons\";\nimport { currenciesSymbols } from \"../../constants\";\n\nclass CartPage extends React.Component {\n    render() {\n        return (\n            <Wrapper>\n                <p className=\"cart-title\">cart</p>\n                \n                {\n                    this.props.cartItems.map(item =>\n                        <div className=\"cart-item-container\">\n                            <div key={item.id} className=\"product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                {/* <ToggleButtons\n                                    product={item}\n                                    attributes={this.item.attributes}\n                                    setAttributes={this.setAttributes.bind(this)}\n                                /> */}\n                                <h4>Price:</h4>\n                                <p key={Math.random()} className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                            </div>\n                        </div>\n                    )\n                }\n                {console.log(this.props.cartItems)}\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}