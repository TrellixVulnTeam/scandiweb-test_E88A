{"ast":null,"code":"import * as actionTypes from \"../../constants/actionTypes\";\nimport { getEqualIndex } from \"../../utils/groupItems\";\nconst initialState = {\n  isOpen: false,\n  list: localStorage.getItem(products) || []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_CART:\n      return { ...state,\n        isOpen: !state.isOpen\n      };\n\n    case actionTypes.ADD_CART_ITEM:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case actionTypes.CHANGE_CART_ITEM_ATTRIBUTE:\n      return { ...state,\n        list: state.list.map(item => {\n          const {\n            name,\n            value\n          } = action.payload.attribute;\n\n          if (getEqualIndex([action.payload.item], item) !== -1) {\n            return { ...item,\n              attrValues: { ...item.attrValues,\n                [name]: value\n              }\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case actionTypes.REMOVE_CART_ITEM:\n      const removeIndex = getEqualIndex(state.list, action.payload);\n      const newArray = [...state.list];\n      newArray.splice(removeIndex, 1);\n      return { ...state,\n        list: newArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/redux/reducers/cart.js"],"names":["actionTypes","getEqualIndex","initialState","isOpen","list","localStorage","getItem","products","reducer","state","action","type","TOGGLE_CART","ADD_CART_ITEM","payload","CHANGE_CART_ITEM_ATTRIBUTE","map","item","name","value","attribute","attrValues","REMOVE_CART_ITEM","removeIndex","newArray","splice"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqBC,QAArB,KAAkC;AAFvB,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,WAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHN,QAAAA,MAAM,EAAE,CAACM,KAAK,CAACN;AAFZ,OAAP;;AAIJ,SAAKH,WAAW,CAACa,aAAjB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACI,OAAvB;AAFH,OAAP;;AAIJ,SAAKd,WAAW,CAACe,0BAAjB;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWY,GAAX,CAAeC,IAAI,IAAI;AACzB,gBAAM;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,cAAkBT,MAAM,CAACI,OAAP,CAAeM,SAAvC;;AACA,cAAInB,aAAa,CAAC,CAACS,MAAM,CAACI,OAAP,CAAeG,IAAhB,CAAD,EAAwBA,IAAxB,CAAb,KAA+C,CAAC,CAApD,EAAuD;AACnD,mBAAO,EACH,GAAGA,IADA;AAEHI,cAAAA,UAAU,EAAE,EACR,GAAGJ,IAAI,CAACI,UADA;AAER,iBAACH,IAAD,GAAQC;AAFA;AAFT,aAAP;AAOH;;AACD,iBAAOF,IAAP;AACH,SAZK;AAFH,OAAP;;AAgBJ,SAAKjB,WAAW,CAACsB,gBAAjB;AACI,YAAMC,WAAW,GAAGtB,aAAa,CAACQ,KAAK,CAACL,IAAP,EAAaM,MAAM,CAACI,OAApB,CAAjC;AACA,YAAMU,QAAQ,GAAG,CAAC,GAAGf,KAAK,CAACL,IAAV,CAAjB;AACAoB,MAAAA,QAAQ,CAACC,MAAT,CAAgBF,WAAhB,EAA6B,CAA7B;AACA,aAAO,EACH,GAAGd,KADA;AAEHL,QAAAA,IAAI,EAAEoB;AAFH,OAAP;;AAIJ;AACI,aAAOf,KAAP;AArCR;AAuCH,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../../constants/actionTypes\";\nimport { getEqualIndex } from \"../../utils/groupItems\";\n\nconst initialState = {\n    isOpen: false,\n    list: localStorage.getItem(products) || []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_CART:\n            return {\n                ...state,\n                isOpen: !state.isOpen,\n            };\n        case actionTypes.ADD_CART_ITEM:\n            return {\n                ...state,\n                list: [...state.list, action.payload],\n            }\n        case actionTypes.CHANGE_CART_ITEM_ATTRIBUTE:\n            return {\n                ...state,\n                list: state.list.map(item => {\n                    const { name, value } = action.payload.attribute;\n                    if (getEqualIndex([action.payload.item], item) !== -1) {\n                        return {\n                            ...item, \n                            attrValues: {\n                                ...item.attrValues,\n                                [name]: value\n                            }\n                        };\n                    }\n                    return item;\n                })\n            }\n        case actionTypes.REMOVE_CART_ITEM:\n            const removeIndex = getEqualIndex(state.list, action.payload);\n            const newArray = [...state.list];\n            newArray.splice(removeIndex, 1)\n            return {\n                ...state,\n                list: newArray\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}