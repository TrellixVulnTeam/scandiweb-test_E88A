{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport class ProductCard extends React.Component {\n  render() {\n    return items.find(x => x.images).images.map(imgObject => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: client.query({\n        query: gql`\n                    query GetProductNames {\n                        category {\n                        products {\n                            inStock\n                        }\n                        }\n                    }\n                    `\n      }).then(result => result.data.category.products.map(i => i.inStock === true ? \"card-inactive\" : \"card\")),\n      children: [imgObject.outOfStock === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"item-image\",\n        src: imgObject.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","ProductCard","Component","render","find","x","images","map","imgObject","query","then","result","data","category","products","i","inStock","outOfStock","image","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMS,gBANT;;AAQE,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKF,OAAO,MAAMO,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAC/CC,EAAAA,MAAM,GAAG;AACP,WAAOX,KAAK,CACTY,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,MADV,EAEJA,MAFI,CAEGC,GAFH,CAEQC,SAAD,iBACV;AACE,MAAA,SAAS,EACPV,MAAM,CACDW,KADL,CACW;AACHA,QAAAA,KAAK,EAAEZ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATuB,OADX,EAYKa,IAZL,CAYUC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BP,GAA9B,CAAkCQ,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAc,IAAd,GAAqB,eAArB,GAAuC,MAA9E,CAZpB,CAFJ;AAAA,iBAmBIR,SAAS,CAACS,UAAV,KAAyB,IAAzB,gBAAgC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA+E,EAnBnF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAET,SAAS,CAACU;AAA3C;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA,OAAUC,IAAI,CAACC,MAAL,KAAgB,EAA1B;AAAA;AAAA;AAAA;AAAA,YAHG,CAAP;AAgCD;;AAlC8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n  } from \"@apollo/client\";\n  \n  const client = new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache()\n  });\n\nexport class ProductCard extends React.Component {\n  render() {\n    return items\n      .find((x) => x.images)\n      .images.map((imgObject) => (\n        <div key={Math.random() * 10}\n          className={\n            client\n                .query({\n                    query: gql`\n                    query GetProductNames {\n                        category {\n                        products {\n                            inStock\n                        }\n                        }\n                    }\n                    `\n                })\n                .then(result => result.data.category.products.map(i => i.inStock === true ? \"card-inactive\" : \"card\" ))\n          }\n    \n        >\n        {\n            imgObject.outOfStock === true ? <p className=\"out-of-stock\">Out of stock</p> : ''\n        }\n          <img className=\"item-image\" src={imgObject.image}></img>\n          <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n          <div className=\"item-info\">\n            <p>Apollo Running Short</p>\n            <p className=\"price\">$50.00</p>\n          </div>\n        </div>\n      ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}