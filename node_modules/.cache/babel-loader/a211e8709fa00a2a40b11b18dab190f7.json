{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setButtonClassName = (attr, id, attribute) => {\n      if (attr.value === id[attribute.id]) {\n        return attribute.type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n  }\n\n  groupItems(list) {\n    const grouped = [];\n\n    for (let item of list) {\n      const equalIndex = grouped.findIndex(x => x.id !== action.payload.id && _.isEqual(action.payload.attrValues, x.attrValues));\n\n      if (equalIndex !== -1) {\n        grouped[equalIndex].count++;\n      } else {\n        grouped.push({ ...item,\n          count: 1\n        });\n      }\n    }\n\n    return grouped;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-page-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), this.groupItems(this.props.cartItems).map(item => {\n        var _item$prices$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info product-info-cart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_item$prices$find = item.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _item$prices$find === void 0 ? void 0 : _item$prices$find.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), item.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-attributes\",\n              children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.setButtonClassName(attr, item.attrValues, attribute),\n                style: { ...(attribute.type === \"swatch\" ? {\n                    backgroundColor: attr.value\n                  } : \"\")\n                },\n                children: attribute.type === \"swatch\" ? \"\" : attr.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 73\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 70\n            }, this))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.addCartItem({ ...item,\n                    count: undefined\n                  });\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.removeCartItem(item);\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: item.gallery[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  removeCartItem\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","removeCartItem","currenciesSymbols","CartPage","Component","setButtonClassName","attr","id","attribute","value","type","groupItems","list","grouped","item","equalIndex","findIndex","x","action","payload","_","isEqual","attrValues","count","push","render","props","cartItems","map","brand","name","selectedCurrency","prices","find","currency","amount","attributes","items","backgroundColor","undefined","gallery","mapStateToProps","state","currencies","selected","cart","products"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\n\nclass CartPage extends React.Component {\n\n    groupItems(list) {\n        const grouped = [];\n\n        for (let item of list) {\n            const equalIndex = grouped.findIndex(x => \n                x.id !== action.payload.id && \n                _.isEqual(action.payload.attrValues, x.attrValues));\n            if (equalIndex !== -1) {\n                grouped[equalIndex].count++;\n            } else {\n                grouped.push({ ...item, count: 1 });\n            }\n        }\n\n        return grouped;\n    }\n\n    setButtonClassName = (attr, id, attribute) => {\n        if (attr.value === id[attribute.id]) {\n            return attribute.type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n        } else {\n            return \"attribute-button\";\n        }\n    }\n\n    render() {\n\n        return (\n            <Wrapper>\n                <p className=\"cart-page-title\">cart</p>\n\n                {\n                    this.groupItems(this.props.cartItems).map(item =>\n                        <div className=\"cart-item-container\">\n                            <div key={item.id} className=\"product-info product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                <p className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}\n                                </p>\n                                {\n                                    item.attributes.map(attribute => <div className=\"cart-attributes\">\n                                        {\n                                            attribute.items.map(attr => <button\n                                                className={this.setButtonClassName(attr, item.attrValues, attribute)}\n                                                style={{ ...attribute.type === \"swatch\" ? { backgroundColor: attr.value } : \"\" }}\n                                            >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                            )}\n                                    </div>)\n                                }\n\n                            </div>\n                            <div className=\"cart-popup-image\">\n                                <div className=\"cart-popup-amount\">\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...item, count: undefined });\n                                        }}>\n                                        +\n                                    </button>\n                                    <p>{item.count}</p>\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.removeCartItem(item);\n                                        }}>\n                                        -\n                                    </button>\n                                </div>\n                                <div className=\"img-wrapper\">\n                                    <img alt=\"\" src={item.gallery[0]}></img>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, removeCartItem }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}