{"ast":null,"code":"import * as actionTypes from \"../../constants/actionTypes\";\nimport { client } from \"../../utils/ClientApi\";\nimport gql from \"graphql-tag\";\nexport const requestCategories = () => async dispatch => {\n  dispatch({\n    type: actionTypes.GET_CATEGORIES_START\n  });\n\n  try {\n    const result = await client.query({\n      query: gql`\n                query getCategories {\n                    categories {\n                        name\n                    }\n                    category {\n                        name\n                    }\n                }\n            `\n    });\n    dispatch({\n      type: actionTypes.GET_CATEGORIES_SUCCESS,\n      payload: result.data.categories.map(x => x.name).concat(result.data.category(x => x.name))\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.GET_CATEGORIES_FAILED\n    });\n  }\n};\nexport const selectCategory = category => dispatch => dispatch({\n  type: actionTypes.SELECT_CATEGORY,\n  payload: category\n});","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/redux/actions/categories.js"],"names":["actionTypes","client","gql","requestCategories","dispatch","type","GET_CATEGORIES_START","result","query","GET_CATEGORIES_SUCCESS","payload","data","categories","map","x","name","concat","category","e","GET_CATEGORIES_FAILED","selectCategory","SELECT_CATEGORY"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,WAAW,CAACM;AAApB,GAAD,CAAR;;AACA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,KAAP,CAAa;AAC9BA,MAAAA,KAAK,EAAEN,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV0C,KAAb,CAArB;AAYAE,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,WAAW,CAACS,sBAApB;AAA4CC,MAAAA,OAAO,EAAGH,MAAM,CAACI,IAAP,CAAYC,UAAZ,CAAuBC,GAAvB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,IAAlC,CAAD,CAA0CC,MAA1C,CAAiDT,MAAM,CAACI,IAAP,CAAYM,QAAZ,CAAqBH,CAAC,IAAIA,CAAC,CAACC,IAA5B,CAAjD;AAArD,KAAD,CAAR;AACH,GAdD,CAcE,OAAOG,CAAP,EAAU;AACRd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,WAAW,CAACmB;AAApB,KAAD,CAAR;AACH;AACJ,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAGH,QAAQ,IAAIb,QAAQ,IAAIA,QAAQ,CAAC;AAAEC,EAAAA,IAAI,EAAEL,WAAW,CAACqB,eAApB;AAAqCX,EAAAA,OAAO,EAAEO;AAA9C,CAAD,CAAvD","sourcesContent":["import * as actionTypes from \"../../constants/actionTypes\";\nimport { client } from \"../../utils/ClientApi\";\nimport gql from \"graphql-tag\";\n\nexport const requestCategories = () => async dispatch => {\n    dispatch({ type: actionTypes.GET_CATEGORIES_START });\n    try {\n        const result = await client.query({\n            query: gql`\n                query getCategories {\n                    categories {\n                        name\n                    }\n                    category {\n                        name\n                    }\n                }\n            `,\n        });\n        dispatch({ type: actionTypes.GET_CATEGORIES_SUCCESS, payload: (result.data.categories.map(x => x.name)).concat(result.data.category(x => x.name)) });\n    } catch (e) {\n        dispatch({ type: actionTypes.GET_CATEGORIES_FAILED });\n    }\n};\n\nexport const selectCategory = category => dispatch => dispatch({ type: actionTypes.SELECT_CATEGORY, payload: category });\n"]},"metadata":{},"sourceType":"module"}