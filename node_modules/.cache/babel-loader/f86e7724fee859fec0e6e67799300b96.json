{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductAttribute } from \"../redux/actions/products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToggleButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate() {// console.log(this.props.productAttributes)\n  }\n\n  render() {\n    const setButtonClassName = (type, value, id) => {\n      if (this.props[id] === value) {\n        return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n\n    if (this.props.product) {\n      return this.props.product.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attribute-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: attribute.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attributes-wrapper\",\n          children: attribute.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.props.addProductAttribute({\n                [attribute.id]: item.value\n              });\n              this.props.productAttributes.map(attributeObject => console.log(Object.keys(attributeObject)) //this.props.addProductAttribute({[attribute.id]: item.value});\n              ); // console.log(this.props.productAttributes)\n            },\n            className: setButtonClassName(attribute.type, item.value, attribute.id),\n            style: { ...(attribute.type === \"swatch\" ? {\n                backgroundColor: item.value\n              } : \"\")\n            },\n            children: attribute.type === \"swatch\" ? \"\" : item.value\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 46\n          }, this))\n        }, attribute.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this));\n    }\n\n    return null;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products.list,\n    productAttributes: state.products.attributes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProductAttribute\n})(ToggleButtons);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.jsx"],"names":["React","connect","addProductAttribute","ToggleButtons","Component","constructor","props","state","componentDidUpdate","render","setButtonClassName","type","value","id","product","attributes","map","attribute","items","item","productAttributes","attributeObject","console","log","Object","keys","backgroundColor","mapStateToProps","products","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,2BAApC;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AAEDC,EAAAA,kBAAkB,GAAG,CACjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,EAAd,KAAqB;AAC5C,UAAI,KAAKP,KAAL,CAAWO,EAAX,MAAmBD,KAAvB,EAA8B;AAC1B,eAAOD,IAAI,KAAK,QAAT,GAAoB,wBAApB,GAA+C,uBAAtD;AACH,OAFD,MAEO;AACH,eAAO,kBAAP;AACH;AACJ,KAND;;AAOA,QAAI,KAAKL,KAAL,CAAWQ,OAAf,EAAwB;AACpB,aACI,KAAKR,KAAL,CAAWQ,OAAX,CAAmBC,UAAnB,CAA8BC,GAA9B,CAAkCC,SAAS,iBACvC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAA,oBAAKA,SAAS,CAACJ;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACKI,SAAS,CAACC,KAAV,CACIF,GADJ,CACQG,IAAI,iBAAI;AACT,YAAA,OAAO,EAAE,MAAM;AACX,mBAAKb,KAAL,CAAWJ,mBAAX,CAA+B;AAAC,iBAACe,SAAS,CAACJ,EAAX,GAAgBM,IAAI,CAACP;AAAtB,eAA/B;AACA,mBAAKN,KAAL,CAAWc,iBAAX,CAA6BJ,GAA7B,CAAiCK,eAAe,IAAIC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,eAAZ,CAAZ,CAApD,CACI;AADJ,gBAFW,CAOX;AACH,aATQ;AAUT,YAAA,SAAS,EAAEX,kBAAkB,CAACO,SAAS,CAACN,IAAX,EAAiBQ,IAAI,CAACP,KAAtB,EAA6BK,SAAS,CAACJ,EAAvC,CAVpB;AAYT,YAAA,KAAK,EAAE,EAAE,IAAGI,SAAS,CAACN,IAAV,KAAmB,QAAnB,GAA8B;AAAEe,gBAAAA,eAAe,EAAEP,IAAI,CAACP;AAAxB,eAA9B,GAAgE,EAAnE;AAAF,aAZE;AAAA,sBAcRK,SAAS,CAACN,IAAV,KAAmB,QAAnB,GAA8B,EAA9B,GAAmCQ,IAAI,CAACP;AAdhC,aAWJO,IAAI,CAACN,EAXD;AAAA;AAAA;AAAA;AAAA,kBADhB;AADL,WAAyCI,SAAS,CAACJ,EAAnD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AA4BH;;AACD,WAAO,IAAP;AACH;;AAlDuC;;AAqD5C,MAAMc,eAAe,GAAGpB,KAAK,IAAI;AAC7B,SAAO;AACHqB,IAAAA,QAAQ,EAAErB,KAAK,CAACqB,QAAN,CAAeC,IADtB;AAEHT,IAAAA,iBAAiB,EAAEb,KAAK,CAACqB,QAAN,CAAeb;AAF/B,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAClB0B,eADkB,EAElB;AAAEzB,EAAAA;AAAF,CAFkB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductAttribute } from \"../redux/actions/products\"\n\nclass ToggleButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentDidUpdate() {\n        // console.log(this.props.productAttributes)\n    }\n\n    render() {\n        const setButtonClassName = (type, value, id) => {\n            if (this.props[id] === value) {\n                return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n            } else {\n                return \"attribute-button\";\n            }\n        }\n        if (this.props.product) {\n            return (\n                this.props.product.attributes.map(attribute =>\n                    <div className=\"attribute-buttons\">\n                        <h4>{attribute.id}</h4>\n                        <div className=\"attributes-wrapper\" key={attribute.id}>\n                            {attribute.items\n                                .map(item => <button\n                                    onClick={() => {\n                                        this.props.addProductAttribute({[attribute.id]: item.value});\n                                        this.props.productAttributes.map(attributeObject => console.log(Object.keys(attributeObject)) \n                                            //this.props.addProductAttribute({[attribute.id]: item.value});\n                                        \n                                        ) \n                                        \n                                        // console.log(this.props.productAttributes)\n                                    }}\n                                    className={setButtonClassName(attribute.type, item.value, attribute.id)}\n                                    key={item.id}\n                                    style={{ ...attribute.type === \"swatch\" ? { backgroundColor: item.value } : \"\" }}\n                                >\n                                    {attribute.type === \"swatch\" ? \"\" : item.value}\n                                </button>\n                                )}\n                        </div>\n                    </div>\n    \n                )\n            );   \n        }\n        return null;\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        products: state.products.list,\n        productAttributes: state.products.attributes,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addProductAttribute }\n)(ToggleButtons);"]},"metadata":{},"sourceType":"module"}