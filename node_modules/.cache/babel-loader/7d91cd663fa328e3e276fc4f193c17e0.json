{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { currenciesSymbols } from '../../constants';\nimport { connect } from \"react-redux\";\nimport { addCartItem } from \"../../redux/actions/cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getSymbolForCurrency = currency => currenciesSymbols[currency] || '$';\n  }\n\n  render() {\n    const product = this.props.product;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: product.inStock ? \"card\" : \"card card-inactive\",\n      children: [product.inStock ? \"\" : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\",\n        onClick: () => this.props.addCartItem({ ...product,\n          attrValues: {}\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/${product.category}/${product.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: product.brand + ' ' + product.name,\n            className: \"item-image\",\n            src: product.gallery[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/${product.category}/${product.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [product.brand, \" \", product.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [this.getSymbolForCurrency(this.props.selectedCurrency), product.prices.map(x => x.currency === this.props.selectedCurrency && x.amount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem\n})(ProductCard);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","NavLink","currenciesSymbols","connect","addCartItem","ProductCard","Component","getSymbolForCurrency","currency","render","product","props","inStock","attrValues","category","id","brand","name","gallery","selectedCurrency","prices","map","x","amount","mapStateToProps","state","currencies","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCC,oBADsC,GACfC,QAAQ,IAAIN,iBAAiB,CAACM,QAAD,CAAjB,IAA+B,GAD5B;AAAA;;AAGtCC,EAAAA,MAAM,GAAG;AAEL,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACE,OAAR,GAAkB,MAAlB,GAA2B,oBAA3C;AAAA,iBACKF,OAAO,CAACE,OAAR,GAAkB,EAAlB,gBAAuB;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD5B,eAEI;AAAK,QAAA,GAAG,EAAC,EAAT;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,GAAG,EAAC,gBAFR;AAGI,QAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWP,WAAX,CAAuB,EAAE,GAAGM,OAAL;AAAcG,UAAAA,UAAU,EAAE;AAA1B,SAAvB;AAHnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,IAAGH,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACK,EAAG,EAAhD;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEL,OAAO,CAACM,KAAR,GAAgB,GAAhB,GAAsBN,OAAO,CAACO,IAAxC;AAA8C,YAAA,SAAS,EAAC,YAAxD;AAAqE,YAAA,GAAG,EAAEP,OAAO,CAACQ,OAAR,CAAgB,CAAhB;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,EAAE,EAAG,IAAGR,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACK,EAAG,EAAhD;AAAA,iCACI;AAAA,uBAAIL,OAAO,CAACM,KAAZ,OAAoBN,OAAO,CAACO,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,qBAAsB,KAAKV,oBAAL,CAA0B,KAAKI,KAAL,CAAWQ,gBAArC,CAAtB,EACKT,OAAO,CAACU,MAAR,CAAeC,GAAf,CAAmBC,CAAC,IAAIA,CAAC,CAACd,QAAF,KAAe,KAAKG,KAAL,CAAWQ,gBAA1B,IAA8CG,CAAC,CAACC,MAAxE,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA5BqC;;AA+B1C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,gBAAgB,EAAEM,KAAK,CAACC,UAAN,CAAiBC;AADhC,GAAP;AAGH,CAJD;;AAMA,eAAexB,OAAO,CAClBqB,eADkB,EAElB;AAAEpB,EAAAA;AAAF,CAFkB,CAAP,CAGbC,WAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { currenciesSymbols } from '../../constants';\nimport { connect } from \"react-redux\";\nimport { addCartItem } from \"../../redux/actions/cart\";\n\nclass ProductCard extends React.Component {\n    getSymbolForCurrency = currency => currenciesSymbols[currency] || '$';\n\n    render() {\n\n        const product = this.props.product;\n\n        return (\n            <div className={product.inStock ? \"card\" : \"card card-inactive\"}>\n                {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                <img alt=\"\"\n                    className=\"buy-icon\"\n                    src=\"./buy-icon.svg\"\n                    onClick={() => this.props.addCartItem({ ...product, attrValues: {} })}></img>\n                <NavLink to={`/${product.category}/${product.id}`}>\n                    <div className=\"item-image-wrapper\">\n                        <img alt={product.brand + ' ' + product.name} className=\"item-image\" src={product.gallery[0]}></img>\n                    </div>\n                </NavLink>\n                <div className=\"item-info\">\n                    <NavLink to={`/${product.category}/${product.id}`}>\n                        <p>{product.brand} {product.name}</p>\n                    </NavLink>\n                    <p className=\"price\">{this.getSymbolForCurrency(this.props.selectedCurrency)}\n                        {product.prices.map(x => x.currency === this.props.selectedCurrency && x.amount)}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        selectedCurrency: state.currencies.selected\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem }\n)(ProductCard);\n"]},"metadata":{},"sourceType":"module"}