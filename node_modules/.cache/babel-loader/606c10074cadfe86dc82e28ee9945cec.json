{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductWrapper extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./a-logo.png\",\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    products: state.products.list,\n    categories: state.categories.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  selectCategory,\n  requestProducts\n})(ProductWrapper);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx"],"names":["React","currenciesSymbols","ToggleButtons","connect","addCartItem","selectCategory","requestProducts","ProductWrapper","Component","render","mapStateToProps","state","selectedCurrency","currencies","selected","products","list","categories"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,eAAT,QAAgC,8BAAhC;;AAGA,OAAO,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAChDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACH;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC,EAA5B;AAA+B,QAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AA6BH;;AA/B+C;;AAmCpD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,gBAAgB,EAAED,KAAK,CAACE,UAAN,CAAiBC,QADhC;AAEHC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeC,IAFtB;AAGHC,IAAAA,UAAU,EAAEN,KAAK,CAACM,UAAN,CAAiBD;AAH1B,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAClBO,eADkB,EAElB;AAAEN,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAFkB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\n\n\nexport class ProductWrapper extends React.Component {\n    render() {\n        return <div className=\"product-wrapper\">\n            <img src=\"./a-logo.png\" alt=\"\" srcset=\"\"/>\n            {/* <div className=\"main-image-wrapper\">\n                {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                <img src={this.state.mainImage.length > 0\n                    ? this.state.mainImage\n                    : product.gallery[0]}\n                    alt={product.id}\n                    className=\"main-image\"></img>\n            </div>\n            <div key={product.id} className=\"product-info\">\n                <h3>{product.brand}</h3>\n                <p>{product.name}</p>\n                <ToggleButtons\n                    product={product}\n                    attributes={this.state.attributes}\n                    setAttributes={this.setAttributes.bind(this)}\n                />\n                <h4>Price:</h4>\n                <p key={Math.random()} className=\"price\">\n                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {product.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                <button\n                    onClick={() => this.isAllSelected() && this.props.addCartItem({ ...product, attrValues: this.state.attributes })}\n                    className={'add-to-cart-button ' + (this.isAllSelected() && product.inStock ? '' : 'add-to-cart-button-disabled')}>\n                    Add to cart\n            </button>\n                <div className=\"product-description\" dangerouslySetInnerHTML={{ __html: product.description }}></div>\n            </div> */}\n        </div>\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        products: state.products.list,\n        categories: state.categories.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, selectCategory, requestProducts }\n)(ProductWrapper);"]},"metadata":{},"sourceType":"module"}