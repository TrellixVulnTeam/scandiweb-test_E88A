{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/CategoryPage.jsx\";\nimport React from \"react\";\nimport { ProductCard } from \"./ProductCard\";\nimport { requestProducts } from \"../../redux/actions/products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryPage extends React.Component {\n  componentDidMount() {\n    this.props.category;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [this.props.isCartOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.selectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          cartItems: this.props.cartItems,\n          addCartItem: this.props.addCartItem,\n          removeCartItem: this.props.removeCartItem,\n          products: this.props.products,\n          selectedCurrency: this.props.selectedCurrency,\n          selectedCategory: this.props.selectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCategory: state.categories.selected,\n    isCartOpen: state.cart.isOpen\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPro\n})(CategoryPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/CategoryPage.jsx"],"names":["React","ProductCard","requestProducts","CategoryPage","Component","componentDidMount","props","category","render","isCartOpen","selectedCategory","cartItems","addCartItem","removeCartItem","products","selectedCurrency","mapStateToProps","state","categories","selected","cart","isOpen","connect","getPro"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,eAAT,QAAgC,8BAAhC;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,KAAL,CAAWC,QAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,iBACK,KAAKF,KAAL,CAAWG,UAAX,iBAAyB;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAD9B,eAEI;AAAA,kBACK,KAAKH,KAAL,CAAWI;AADhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI,QAAC,WAAD;AACA,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,SADtB;AAEA,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAFxB;AAGA,UAAA,cAAc,EAAE,KAAKN,KAAL,CAAWO,cAH3B;AAIA,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,QAJrB;AAKA,UAAA,gBAAgB,EAAE,KAAKR,KAAL,CAAWS,gBAL7B;AAMA,UAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWI;AAN7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAzBsC;;AA4B3C,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,gBAAgB,EAAEO,KAAK,CAACC,UAAN,CAAiBC,QADhC;AAEHV,IAAAA,UAAU,EAAEQ,KAAK,CAACG,IAAN,CAAWC;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeC,OAAO,CAClBN,eADkB,EAElB;AAAEO,EAAAA;AAAF,CAFkB,CAAP,CAGbpB,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { ProductCard } from \"./ProductCard\";\nimport { requestProducts } from \"../../redux/actions/products\";\n\nclass CategoryPage extends React.Component {\n\n    componentDidMount() {\n\n        this.props.category\n    }\n\n    render() {\n        return (\n            <main>\n                {this.props.isCartOpen && <div className=\"overlay\"></div>}\n                <h2>\n                    {this.props.selectedCategory}\n                </h2>\n                <div className=\"cards-wrapper\">\n                    <ProductCard \n                    cartItems={this.props.cartItems} \n                    addCartItem={this.props.addCartItem}\n                    removeCartItem={this.props.removeCartItem}\n                    products={this.props.products} \n                    selectedCurrency={this.props.selectedCurrency}\n                    selectedCategory={this.props.selectedCategory} />\n                </div>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        selectedCategory: state.categories.selected,\n        isCartOpen: state.cart.isOpen\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { getPro}\n)(CategoryPage);\n\n"]},"metadata":{},"sourceType":"module"}