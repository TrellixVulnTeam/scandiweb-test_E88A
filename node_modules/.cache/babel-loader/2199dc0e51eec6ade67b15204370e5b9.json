{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ToggleButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTextOption: '',\n      selectedColor: ''\n    };\n  }\n\n  render() {\n    return this.props.products.map(x => x.map(product => product.id === this.props.product && product.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: attribute.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes-wrapper\",\n        children: attribute.items.map(item => attribute.type === \"swatch\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              selectedColor: item.value\n            });\n          },\n          className: this.state.selectedColor === item.value ? \"attribute-color-active\" : \"attribute-button\",\n          style: {\n            backgroundColor: item.value\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              selectedTextOption: item.value\n            });\n            console.log(attribute);\n          },\n          className: this.state.selectedTextOption === item.value ? \"attribute-text-active\" : \"attribute-button\",\n          children: item.value\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 47\n        }, this))\n      }, attribute.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }, this))));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.js"],"names":["React","ToggleButtons","Component","constructor","props","state","selectedTextOption","selectedColor","render","products","map","x","product","id","attributes","attribute","items","item","type","setState","value","backgroundColor","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,kBAAkB,EAAE,EADX;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,IAAIA,CAAC,CACzBD,GADwB,CACpBE,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAe,KAAKT,KAAL,CAAWQ,OAA1B,IACTA,OAAO,CAACE,UAAR,CACEJ,GADF,CACMK,SAAS,iBACV;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA,kBAAKA,SAAS,CAACF;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACKE,SAAS,CAACC,KAAV,CACIN,GADJ,CACQO,IAAI,IAAIF,SAAS,CAACG,IAAV,KAAmB,QAAnB,gBACP;AACE,UAAA,OAAO,EAAE,MAAM;AACX,iBAAKC,QAAL,CAAc;AACVZ,cAAAA,aAAa,EAAEU,IAAI,CAACG;AADV,aAAd;AAGH,WALH;AAME,UAAA,SAAS,EAAE,KAAKf,KAAL,CAAWE,aAAX,KAA6BU,IAAI,CAACG,KAAlC,GACT,wBADS,GAET,kBARJ;AAUE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEJ,IAAI,CAACG;AAAxB;AAVT,WASOH,IAAI,CAACJ,EATZ;AAAA;AAAA;AAAA;AAAA,gBADO,gBAYP;AACE,UAAA,OAAO,EAAE,MAAM;AACX,iBAAKM,QAAL,CAAc;AACVb,cAAAA,kBAAkB,EAAEW,IAAI,CAACG;AADf,aAAd;AAGAE,YAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACH,WANH;AAOE,UAAA,SAAS,EAAE,KAAKV,KAAL,CAAWC,kBAAX,KAAkCW,IAAI,CAACG,KAAvC,GACT,uBADS,GAET,kBATJ;AAAA,oBAUiBH,IAAI,CAACG;AAVtB,WAUOH,IAAI,CAACJ,EAVZ;AAAA;AAAA;AAAA;AAAA,gBAbT;AADL,SAAyCE,SAAS,CAACF,EAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,CAFkB,CAA7B,CADJ;AAqCH;;AA/C8C","sourcesContent":["import React from \"react\";\n\nexport class ToggleButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTextOption: '',\n            selectedColor: '',\n        }\n    }\n\n    render() {\n        return (\n            this.props.products.map(x => x\n                .map(product => product.id === this.props.product\n                    && product.attributes\n                        .map(attribute =>\n                            <div className=\"attribute-buttons\">\n                                <h4>{attribute.id}</h4>\n                                <div className=\"attributes-wrapper\" key={attribute.id}>\n                                    {attribute.items\n                                        .map(item => attribute.type === \"swatch\"\n                                            ? <button \n                                                onClick={() => {\n                                                    this.setState({\n                                                        selectedColor: item.value\n                                                    });\n                                                }}\n                                                className={this.state.selectedColor === item.value \n                                                ? \"attribute-color-active\"\n                                                : \"attribute-button\"}\n                                                key={item.id}\n                                                style={{ backgroundColor: item.value }}></button>\n                                            : <button\n                                                onClick={() => {\n                                                    this.setState({\n                                                        selectedTextOption: item.value\n                                                    });\n                                                    console.log(attribute);\n                                                }}\n                                                className={this.state.selectedTextOption === item.value \n                                                ? \"attribute-text-active\"\n                                                : \"attribute-button\"}\n                                                key={item.id}>{item.value}</button>\n                                        )}\n                                </div>\n                            </div>\n\n                        ))))\n    }\n}"]},"metadata":{},"sourceType":"module"}