{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/header/Cart.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart, addCartItem } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  stringCount() {\n    const count = this.props.cartItems.length;\n    return `${count} item${count !== 1 ? 's' : ''}`;\n  }\n\n  countItems() {\n    console.log(this.props.cartItems);\n  }\n\n  sumPrice() {\n    let sum = 0;\n\n    for (let product of this.props.cartItems) {\n      sum += product.prices.find(price => price.currency === this.props.selectedCurrency).amount;\n    }\n\n    return sum;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        className: this.props.isCartOpen ? \"cart-open\" : \"cart\",\n        src: \"../../empty-cart.svg\",\n        onClick: () => {\n          this.props.toggleCart();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), this.props.isCartOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"cart-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"My bag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 51\n            }, this), \", \", this.stringCount()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), this.props.cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: cartItem.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: cartItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [currenciesSymbols[this.props.selectedCurrency] || '$', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: cartItem.prices.find(price => price.currency === this.props.selectedCurrency).amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-attributes\",\n                children: cartItem.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: Object.values(cartItem.attrValues).includes(attr.value) ? 'attribute-text-active-cart' : 'attribute-button-cart',\n                    style: { ...(attribute.type === \"swatch\" ? {\n                        backgroundColor: attr.value\n                      } : \"\")\n                    },\n                    children: attribute.type === \"swatch\" ? \"\" : attr.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 81\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 82\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-image\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-amount\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  onClick: () => {\n                    this.props.addCartItem({ ...cartItem,\n                      attrValues: ''\n                    });\n                    console.log(this.props);\n                  },\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: cartItem.gallery[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 66\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-popup-total\",\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', this.sumPrice().toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/cart',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"view bag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-popup-green-button\",\n              children: \"check out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isCartOpen: state.cart.isOpen,\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCart,\n  addCartItem\n})(Cart);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/header/Cart.jsx"],"names":["React","currenciesSymbols","toggleCart","addCartItem","connect","NavLink","Cart","Component","stringCount","count","props","cartItems","length","countItems","console","log","sumPrice","sum","product","prices","find","price","currency","selectedCurrency","amount","render","isCartOpen","map","cartItem","brand","name","attributes","attribute","items","attr","Object","values","attrValues","includes","value","type","backgroundColor","gallery","toFixed","mapStateToProps","state","cart","isOpen","currencies","selected","list"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart, addCartItem } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Cart extends React.Component {\n\n    stringCount() {\n        const count = this.props.cartItems.length;\n        return `${count} item${count !== 1 ? 's' : ''}`;\n    }\n\n    countItems() {\n        console.log(this.props.cartItems)\n    }\n\n    sumPrice() {\n        let sum = 0;\n        for (let product of this.props.cartItems) {\n            sum += product.prices.find(price => price.currency === this.props.selectedCurrency).amount;\n        }\n\n        return sum;\n    }\n\n    render() {\n        return (\n            <div className=\"cart-dd-wrapper\">\n                <img alt=\"\" className={this.props.isCartOpen ? \"cart-open\" : \"cart\"} src=\"../../empty-cart.svg\" onClick={() => {\n                    this.props.toggleCart();\n                }}></img>\n                {(this.props.isCartOpen) && <div role=\"list\" className=\"cart-list\">\n                    <div className=\"cart-wrapper\">\n                        <p className=\"cart-title\"><b>My bag</b>, {this.stringCount()}</p>\n                        {\n                            this.props.cartItems.map(cartItem => <div className=\"cart-popup-item\">\n                                <div className=\"cart-popup-info\">\n                                    <p>{cartItem.brand}</p>\n                                    <p>{cartItem.name}</p>\n                                    <p>{currenciesSymbols[this.props.selectedCurrency] || '$'}\n                                        <b>{cartItem.prices.find(price => price.currency === this.props.selectedCurrency).amount}</b></p>\n                                    <div className=\"cart-popup-attributes\">\n                                        {\n                                            cartItem.attributes.map(attribute => <div>\n                                                {\n                                                    attribute.items.map(attr => <button\n                                                        className={Object.values(cartItem.attrValues).includes(attr.value) ? 'attribute-text-active-cart' : 'attribute-button-cart'}\n                                                        style={{ ...attribute.type === \"swatch\" \n                                                        ? { backgroundColor: attr.value } : \"\" }}\n                                                    >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                                    )}\n                                            </div>)\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"cart-popup-image\">\n                                    <div className=\"cart-popup-amount\">\n                                        <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...cartItem, attrValues: '' });\n                                            console.log(this.props)\n                                        }}>\n                                            +\n                                        </button>\n                                        <p>1</p>\n                                        <button className=\"cart-popup-button\">\n                                            -\n                                        </button>\n                                    </div>\n                                    <div className=\"img-wrapper\">\n                                        <img alt=\"\" src={cartItem.gallery[0]}></img>\n                                    </div>\n                                </div>\n                            </div>\n                            )\n                        }\n                        <p className=\"cart-popup-total\">Total: <b>{currenciesSymbols[this.props.selectedCurrency] || '$'}{this.sumPrice().toFixed(2)}</b></p>\n                        <div className=\"cart-buttons\">\n                            <NavLink to={'/cart'}>\n                                <button>view bag</button>\n                            </NavLink>\n                            <button className=\"cart-popup-green-button\">check out</button>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        isCartOpen: state.cart.isOpen,\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { toggleCart, addCartItem }\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}