{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { Query } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNames = gql`\n{\n  category {\n    products {\n      name\n      inStock\n    }\n  }\n}`;\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport class ProductCard extends React.Component {\n  render() {\n    return items.find(x => x.images).images.map(imgObject => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: imgObject.outOfStock === true ? \"card-inactive\" : \"card\",\n      children: [imgObject.outOfStock === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 45\n      }, this) : '', /*#__PURE__*/_jsxDEV(Query, {\n        query: getNames,\n        children: ({\n          loading,\n          error,\n          data\n        }) => {\n          if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this);\n          if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this);\n          return data.category.products.map(({\n            name,\n            inStock\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${name}: ${inStock}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 7\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"item-image\",\n        src: imgObject.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","Query","getNames","client","uri","cache","ProductCard","Component","render","find","x","images","map","imgObject","outOfStock","loading","error","data","category","products","name","inStock","image","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMS,gBANT;AAOA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EARA;AAUE,MAAMG,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIR,aAAJ;AAFuB,CAAjB,CAAf;AAKF,OAAO,MAAMS,WAAN,SAA0BZ,KAAK,CAACa,SAAhC,CAA0C;AAC/CC,EAAAA,MAAM,GAAG;AACP,WAAOb,KAAK,CACTc,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,MADV,EAEJA,MAFI,CAEGC,GAFH,CAEQC,SAAD,iBACV;AACE,MAAA,SAAS,EACPA,SAAS,CAACC,UAAV,KAAyB,IAAzB,GAAgC,eAAhC,GAAkD,MAFtD;AAAA,iBAMID,SAAS,CAACC,UAAV,KAAyB,IAAzB,gBAAgC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA+E,EANnF,eASN,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEZ,QAAd;AAAA,kBACC,CAAC;AAAEa,UAAAA,OAAF;AAAWC,UAAAA,KAAX;AAAkBC,UAAAA;AAAlB,SAAD,KAA8B;AAC/B,cAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,cAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,iBAAOC,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuBP,GAAvB,CAA2B,CAAC;AAAEQ,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,kBAChC;AAAA,mCACE;AAAA,wBAAK,GAAED,IAAK,KAAIC,OAAQ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF,aAAUD,IAAV;AAAA;AAAA;AAAA;AAAA,kBADK,CAAP;AAKC;AATD;AAAA;AAAA;AAAA;AAAA,cATM,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEP,SAAS,CAACS;AAA3C;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA,OAAUC,IAAI,CAACC,MAAL,KAAgB,EAA1B;AAAA;AAAA;AAAA;AAAA,YAHG,CAAP;AAgCD;;AAlC8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n  } from \"@apollo/client\";\nimport { Query } from \"@apollo/client\"\nconst getNames = gql`\n{\n  category {\n    products {\n      name\n      inStock\n    }\n  }\n}`;\n  \n  const client = new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache()\n  });\n\nexport class ProductCard extends React.Component {\n  render() {\n    return items\n      .find((x) => x.images)\n      .images.map((imgObject) => (\n        <div key={Math.random() * 10}\n          className={\n            imgObject.outOfStock === true ? \"card-inactive\" : \"card\"\n          }\n        >\n        {\n            imgObject.outOfStock === true ? <p className=\"out-of-stock\">Out of stock</p> : ''\n        }\n        {\n  <Query query={getNames} >\n  {({ loading, error, data }) => {\n  if (loading) return <p>Loadingâ€¦</p>;\n  if (error) return <p>Error :(</p>;\n  return data.category.products.map(({ name, inStock }) => (\n    <div key={name}>\n      <p>{`${name}: ${inStock}`}</p>\n    </div>\n   ));\n  }}\n</Query>\n}\n          <img className=\"item-image\" src={imgObject.image}></img>\n          <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n          <div className=\"item-info\">\n            <p>Apollo Running Short</p>\n            <p className=\"price\">$50.00</p>\n          </div>\n        </div>\n      ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}