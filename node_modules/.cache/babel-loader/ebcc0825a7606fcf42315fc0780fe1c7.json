{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/header/CurrenciesDropdown.jsx\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { selectCurrency, requestCurrencies } from '../../redux/actions/currencies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrenciesDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListOpen: false,\n      headerTitle: \"$\"\n    };\n    console.log(props);\n  }\n\n  componentDidMount() {}\n  /*toggleList = () => {\n      this.setState((prevState) => ({\n          isListOpen: !prevState.isListOpen,\n      }));\n  };\n   selectItem = (item) => {\n      const { resetThenSet } = this.props;\n      const { title, id, key } = item;\n       this.setState(\n          {\n              headerTitle: title[0],\n              isListOpen: false,\n          },\n          () => resetThenSet(id, key)\n      );\n  };*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return { ...state.currencies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  requestCurrencies,\n  selectCurrency\n})(CurrenciesDropdown);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/header/CurrenciesDropdown.jsx"],"names":["React","FontAwesome","connect","selectCurrency","requestCurrencies","CurrenciesDropdown","Component","constructor","props","state","isListOpen","headerTitle","console","log","componentDidMount","render","mapStateToProps","currencies"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,gCAAlD;;;AAEA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;;AAEDM,EAAAA,iBAAiB,GAAG,CAEnB;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIIC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AAhE4C;;AAmEjD,MAAMC,eAAe,GAAGP,KAAK,IAAI;AAC7B,SAAO,EAAE,GAAGA,KAAK,CAACQ;AAAX,GAAP;AACH,CAFD;;AAIA,eAAef,OAAO,CAClBc,eADkB,EAElB;AAAEZ,EAAAA,iBAAF;AAAqBD,EAAAA;AAArB,CAFkB,CAAP,CAGbE,kBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { selectCurrency, requestCurrencies } from '../../redux/actions/currencies'\n\nclass CurrenciesDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isListOpen: false,\n            headerTitle: \"$\",\n        };\n\n        console.log(props)\n    }\n\n    componentDidMount() {\n\n    }\n\n    /*toggleList = () => {\n        this.setState((prevState) => ({\n            isListOpen: !prevState.isListOpen,\n        }));\n    };\n\n    selectItem = (item) => {\n        const { resetThenSet } = this.props;\n        const { title, id, key } = item;\n\n        this.setState(\n            {\n                headerTitle: title[0],\n                isListOpen: false,\n            },\n            () => resetThenSet(id, key)\n        );\n    };*/\n\n    render() {\n\n        return (\n            <div className=\"dd-wrapper\">\n                {/*<button type=\"button\" className=\"dd-header\" onClick={this.toggleList}>\n                    <div\n                        className={isListOpen ? \"dd-header-title open\" : \"dd-header-title\"}\n                    >\n                        {headerTitle}\n                    </div>\n                    {isListOpen ? (\n                        <FontAwesome name=\"angle-down\" size=\"2x\" className=\"open\" />\n                    ) : (\n                        <FontAwesome name=\"angle-up\" size=\"2x\" />\n                    )}\n                </button>\n                {isListOpen && <div role=\"list\" className=\"dd-list\">\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className=\"dd-list-item\"\n                            key={item.id}\n                            onClick={() => this.selectItem(item)}\n                        >\n                            {item.title} {item.selected}\n                        </button>\n                    ))}\n                </div>}*/}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { ...state.currencies };\n};\n\nexport default connect(\n    mapStateToProps,\n    { requestCurrencies, selectCurrency }\n)(CurrenciesDropdown);"]},"metadata":{},"sourceType":"module"}