{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { Query } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNames = gql`\n{\n  category {\n    products {\n      name\n      inStock\n    }\n  }\n}`;\n\nconst Data = () => /*#__PURE__*/_jsxDEV(Query, {\n  query: getNames,\n  children: ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this);\n    return data.category.products.map(({\n      name,\n      inStock\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${name}: ${inStock}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this));\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\n_c = Data;\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport class ProductCard extends React.Component {\n  render() {\n    return items.find(x => x.images).images.map(imgObject => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: imgObject.outOfStock === true ? \"card-inactive\" : \"card\",\n      children: [imgObject.outOfStock === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this) : '', Data(), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"item-image\",\n        src: imgObject.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this));\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","Query","getNames","Data","loading","error","data","category","products","map","name","inStock","client","uri","cache","ProductCard","Component","render","find","x","images","imgObject","outOfStock","image","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMS,gBANT;AAOA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EARA;;AASA,MAAMG,IAAI,GAAG,mBACX,QAAC,KAAD;AAAO,EAAA,KAAK,EAAED,QAAd;AAAA,YACC,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC/B,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOC,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuBC,GAAvB,CAA2B,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBAChC;AAAA,6BACE;AAAA,kBAAK,GAAED,IAAK,KAAIC,OAAQ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF,OAAUD,IAAV;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKC;AATD;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMP,I;AAcJ,MAAMS,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AAFuB,CAAjB,CAAf;AAKF,OAAO,MAAMkB,WAAN,SAA0BrB,KAAK,CAACsB,SAAhC,CAA0C;AAC/CC,EAAAA,MAAM,GAAG;AACP,WAAOtB,KAAK,CACTuB,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,MADV,EAEJA,MAFI,CAEGX,GAFH,CAEQY,SAAD,iBACV;AACE,MAAA,SAAS,EACPA,SAAS,CAACC,UAAV,KAAyB,IAAzB,GAAgC,eAAhC,GAAkD,MAFtD;AAAA,iBAMID,SAAS,CAACC,UAAV,KAAyB,IAAzB,gBAAgC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA+E,EANnF,EAQCnB,IAAI,EARL,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEkB,SAAS,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OAAUC,IAAI,CAACC,MAAL,KAAgB,EAA1B;AAAA;AAAA;AAAA;AAAA,YAHG,CAAP;AAoBD;;AAtB8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n  } from \"@apollo/client\";\nimport { Query } from \"@apollo/client\"\nconst getNames = gql`\n{\n  category {\n    products {\n      name\n      inStock\n    }\n  }\n}`;\nconst Data = () => (\n  <Query query={getNames} >\n  {({ loading, error, data }) => {\n  if (loading) return <p>Loadingâ€¦</p>;\n  if (error) return <p>Error :(</p>;\n  return data.category.products.map(({ name, inStock }) => (\n    <div key={name}>\n      <p>{`${name}: ${inStock}`}</p>\n    </div>\n   ));\n  }}\n</Query>\n);\n  \n  const client = new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache()\n  });\n\nexport class ProductCard extends React.Component {\n  render() {\n    return items\n      .find((x) => x.images)\n      .images.map((imgObject) => (\n        <div key={Math.random() * 10}\n          className={\n            imgObject.outOfStock === true ? \"card-inactive\" : \"card\"\n          }\n        >\n        {\n            imgObject.outOfStock === true ? <p className=\"out-of-stock\">Out of stock</p> : ''\n        }\n        {Data()}\n          <img className=\"item-image\" src={imgObject.image}></img>\n          <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n          <div className=\"item-info\">\n            <p>Apollo Running Short</p>\n            <p className=\"price\">$50.00</p>\n          </div>\n        </div>\n      ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}