{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport ToggleButtons from \"../product/ToggleButtons\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { ValuesOfCorrectTypeRule } from \"graphql\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setButtonClassName = (type, attr, id, attribute) => {\n      console.log(attr.value, id[attribute.id]);\n\n      if (attr.value === id[attribute.id]) {\n        return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-page-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), this.props.cartItems.map(item => {\n        var _item$prices$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info product-info-cart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_item$prices$find = item.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _item$prices$find === void 0 ? void 0 : _item$prices$find.amount]\n            }, Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), item.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-attributes\",\n              children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.setButtonClassName(attribute.type, attr, item.attrValues, attribute),\n                style: { ...(attribute.type === \"swatch\" ? {\n                    backgroundColor: attr.value\n                  } : \"\")\n                },\n                children: attribute.type === \"swatch\" ? \"\" : attr.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 73\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 70\n            }, this))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.addCartItem({ ...item,\n                    attrValues: item.attrValues\n                  });\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.removeCartItem({ ...item\n                  }, item);\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: item.gallery[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  removeCartItem\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","removeCartItem","ToggleButtons","currenciesSymbols","ValuesOfCorrectTypeRule","CartPage","Component","setButtonClassName","type","attr","id","attribute","console","log","value","render","props","cartItems","map","item","brand","name","selectedCurrency","prices","find","x","currency","amount","Math","random","attributes","items","attrValues","backgroundColor","gallery","mapStateToProps","state","currencies","selected","cart","list","products"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport ToggleButtons from \"../product/ToggleButtons\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { ValuesOfCorrectTypeRule } from \"graphql\";\n\nclass CartPage extends React.Component {\n\n    setButtonClassName = (type, attr, id, attribute) => {\n        console.log(attr.value, id[attribute.id])\n        if (attr.value === id[attribute.id]) {\n            return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n        } else {\n            return \"attribute-button\";\n        }\n    }\n    \n    render() {\n        return (\n            <Wrapper>\n                <p className=\"cart-page-title\">cart</p>\n\n                {\n                    this.props.cartItems.map(item =>\n                        <div className=\"cart-item-container\">\n                            <div key={item.id} className=\"product-info product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                <p key={Math.random()} className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}\n                                </p>\n                                {\n                                    item.attributes.map(attribute => <div className=\"cart-attributes\">\n                                        {\n                                            attribute.items.map(attr => <button\n                                            className={this.setButtonClassName(attribute.type, attr, item.attrValues, attribute)}\n                                            style={{ ...attribute.type === \"swatch\" ? { backgroundColor: attr.value } : \"\" }}\n                                            >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                            )}\n                                    </div>)\n                                }\n                                \n                            </div>\n                            <div className=\"cart-popup-image\">\n                                    <div className=\"cart-popup-amount\">\n                                        <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...item, attrValues: item.attrValues });\n                                        }}>\n                                            +\n                                        </button>\n                                        <p>1</p>\n                                        <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.removeCartItem({...item}, item);\n                                        }}>\n                                            -\n                                        </button>\n                                    </div>\n                                    <div className=\"img-wrapper\">\n                                        <img alt=\"\" src={item.gallery[0]}></img>\n                                    </div>\n                                </div>\n                        </div>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, removeCartItem }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}