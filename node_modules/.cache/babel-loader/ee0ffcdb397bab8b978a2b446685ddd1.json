{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setButtonClassName = (type, attr, id, attribute) => {\n      if (attr.value === id[attribute.id]) {\n        return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n  }\n\n  countCartItems(itemId) {\n    const counts = {};\n    this.props.cartItems.forEach(function (x) {\n      counts[x.id] = (counts[x.id] || 0) + 1;\n    });\n    console.log(this.props.cartItems.map(item => console.log(item.id)));\n    console.log(counts[itemId]);\n    return counts[itemId];\n  }\n\n  getProductsSet() {\n    const itemsSet = new Set(this.props.cartItems.map(item => JSON.stringify(item)));\n    const productsSet = [];\n    itemsSet.forEach(item => productsSet.push(JSON.parse(item)));\n    return productsSet;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-page-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), this.getProductsSet().map(item => {\n        var _item$prices$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info product-info-cart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_item$prices$find = item.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _item$prices$find === void 0 ? void 0 : _item$prices$find.amount]\n            }, Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), item.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-attributes\",\n              children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.setButtonClassName(attribute.type, attr, item.attrValues, attribute),\n                style: { ...(attribute.type === \"swatch\" ? {\n                    backgroundColor: attr.value\n                  } : \"\")\n                },\n                children: attribute.type === \"swatch\" ? \"\" : attr.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 73\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 70\n            }, this))]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.addCartItem({ ...item,\n                    attrValues: item.attrValues\n                  });\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.countCartItems(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.removeCartItem(item);\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: item.gallery[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  removeCartItem\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","removeCartItem","currenciesSymbols","CartPage","Component","setButtonClassName","type","attr","id","attribute","value","countCartItems","itemId","counts","props","cartItems","forEach","x","console","log","map","item","getProductsSet","itemsSet","Set","JSON","stringify","productsSet","push","parse","render","brand","name","selectedCurrency","prices","find","currency","amount","Math","random","attributes","items","attrValues","backgroundColor","gallery","mapStateToProps","state","currencies","selected","cart","list","products"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\n\nclass CartPage extends React.Component {\n\n    countCartItems(itemId) {\n        const counts = {};\n        this.props.cartItems.forEach(function (x) { counts[x.id] = (counts[x.id] || 0) + 1; \n        });\n        console.log(this.props.cartItems.map(item => console.log(item.id)))\n\n        console.log(counts[itemId])\n        return counts[itemId]\n    }\n\n    getProductsSet() {\n        const itemsSet = new Set(this.props.cartItems.map(item => JSON.stringify(item)))\n        const productsSet = [];\n        itemsSet.forEach(item => productsSet.push(JSON.parse(item)));\n        return productsSet;\n    }\n\n    setButtonClassName = (type, attr, id, attribute) => {\n        if (attr.value === id[attribute.id]) {\n            return type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n        } else {\n            return \"attribute-button\";\n        }\n    }\n\n    render() {\n\n        return (\n            <Wrapper>\n                <p className=\"cart-page-title\">cart</p>\n\n                {\n                    this.getProductsSet().map(item =>\n                        <div className=\"cart-item-container\">\n                            <div key={item.id} className=\"product-info product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                <p key={Math.random()} className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}\n                                </p>\n                                {\n                                    item.attributes.map(attribute => <div className=\"cart-attributes\">\n                                        {\n                                            attribute.items.map(attr => <button\n                                                className={this.setButtonClassName(attribute.type, attr, item.attrValues, attribute)}\n                                                style={{ ...attribute.type === \"swatch\" ? { backgroundColor: attr.value } : \"\" }}\n                                            >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                            )}\n                                    </div>)\n                                }\n\n                            </div>\n                            <div className=\"cart-popup-image\">\n                                <div className=\"cart-popup-amount\">\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...item, attrValues: item.attrValues });\n                                        }}>\n                                        +\n                                    </button>\n                                    <p>{this.countCartItems(item.id)}</p>\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.removeCartItem(item);\n                                        }}>\n                                        -\n                                    </button>\n                                </div>\n                                <div className=\"img-wrapper\">\n                                    <img alt=\"\" src={item.gallery[0]}></img>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, removeCartItem }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}