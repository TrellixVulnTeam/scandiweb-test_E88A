{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/CategoryPage.jsx\";\nimport React from \"react\";\nimport { ProductCard } from \"./ProductCard\";\nimport { requestProducts } from \"../../redux/actions/products\";\nimport { selectCategory } from \"../../redux/actions/categories\";\nimport Wrapper from \"../Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryPage extends React.Component {\n  componentDidMount() {\n    const foundCategory = this.props.categories.find(x => x.name === this.props.category);\n\n    if (foundCategory) {\n      this.props.selectCategory(foundCategory);\n      this.props.requestProducts(foundCategory.name);\n    } else {\n      window.location.href = '/';\n    }\n  }\n\n  render() {\n    if (!this.props.selectedCategory || !this.props.products) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.selectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-wrapper\",\n        children: this.props.products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 57\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.list,\n    selectedCategory: state.categories.selected,\n    isCartOpen: state.cart.isOpen,\n    products: state.products.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  requestProducts,\n  selectCategory\n})(CategoryPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/CategoryPage.jsx"],"names":["React","ProductCard","requestProducts","selectCategory","Wrapper","CategoryPage","Component","componentDidMount","foundCategory","props","categories","find","x","name","category","window","location","href","render","selectedCategory","products","map","product","mapStateToProps","state","list","selected","isCartOpen","cart","isOpen","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAEvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,KAAKJ,KAAL,CAAWK,QAAtD,CAAtB;;AACA,QAAIN,aAAJ,EAAmB;AACf,WAAKC,KAAL,CAAWN,cAAX,CAA0BK,aAA1B;AACA,WAAKC,KAAL,CAAWP,eAAX,CAA2BM,aAAa,CAACK,IAAzC;AACH,KAHD,MAGO;AACHE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKT,KAAL,CAAWU,gBAAZ,IAAgC,CAAC,KAAKV,KAAL,CAAWW,QAAhD,EAA0D;AACtD,aAAO,IAAP;AACH;;AAED,wBACI,QAAC,OAAD;AAAA,8BACI;AAAA,kBACK,KAAKX,KAAL,CAAWU;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACK,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,GAApB,CAAwBC,OAAO,iBAAI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAAnC;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA5BsC;;AA+B3C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHd,IAAAA,UAAU,EAAEc,KAAK,CAACd,UAAN,CAAiBe,IAD1B;AAEHN,IAAAA,gBAAgB,EAAEK,KAAK,CAACd,UAAN,CAAiBgB,QAFhC;AAGHC,IAAAA,UAAU,EAAEH,KAAK,CAACI,IAAN,CAAWC,MAHpB;AAIHT,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeK;AAJtB,GAAP;AAMH,CAPD;;AASA,eAAeK,OAAO,CAClBP,eADkB,EAElB;AAAErB,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAFkB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { ProductCard } from \"./ProductCard\";\nimport { requestProducts } from \"../../redux/actions/products\";\nimport { selectCategory } from \"../../redux/actions/categories\";\nimport Wrapper from \"../Wrapper\";\n\nclass CategoryPage extends React.Component {\n\n    componentDidMount() {\n        const foundCategory = this.props.categories.find(x => x.name === this.props.category);\n        if (foundCategory) {\n            this.props.selectCategory(foundCategory);\n            this.props.requestProducts(foundCategory.name);\n        } else {\n            window.location.href = '/';\n        }\n    }\n\n    render() {\n\n        if (!this.props.selectedCategory || !this.props.products) {\n            return null;\n        }\n\n        return (\n            <Wrapper>\n                <h2>\n                    {this.props.selectedCategory}\n                </h2>\n                <div className=\"cards-wrapper\">\n                    {this.props.products.map(product => <ProductCard product={product} />)}\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        categories: state.categories.list,\n        selectedCategory: state.categories.selected,\n        isCartOpen: state.cart.isOpen,\n        products: state.products.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { requestProducts, selectCategory }\n)(CategoryPage);\n\n"]},"metadata":{},"sourceType":"module"}