{"ast":null,"code":"import * as actionTypes from \"../../constants/actionTypes\";\nimport _ from \"lodash\";\nconst initialState = {\n  isOpen: false,\n  list: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_CART:\n      return { ...state,\n        isOpen: !state.isOpen\n      };\n\n    case actionTypes.ADD_CART_ITEM:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case actionTypes.REMOVE_CART_ITEM:\n      const removeIndex = state.list.findIndex(x => x.id === action.payload.id && _.isEqual(action.payload.attrValues, x.attrValues));\n      return { ...state,\n        list: state.list.splice(removeIndex, 1)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/redux/reducers/cart.js"],"names":["actionTypes","_","initialState","isOpen","list","reducer","state","action","type","TOGGLE_CART","ADD_CART_ITEM","payload","REMOVE_CART_ITEM","removeIndex","findIndex","x","id","isEqual","attrValues","splice"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,WAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIJ,SAAKH,WAAW,CAACU,aAAjB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACI,OAAvB;AAFH,OAAP;;AAIJ,SAAKX,WAAW,CAACY,gBAAjB;AACI,YAAMC,WAAW,GAAGP,KAAK,CAACF,IAAN,CAAWU,SAAX,CAAqBC,CAAC,IACtCA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,OAAP,CAAeK,EAAxB,IACAf,CAAC,CAACgB,OAAF,CAAUV,MAAM,CAACI,OAAP,CAAeO,UAAzB,EAAqCH,CAAC,CAACG,UAAvC,CAFgB,CAApB;AAGA,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWe,MAAX,CAAkBN,WAAlB,EAA+B,CAA/B;AAFH,OAAP;;AAIJ;AACI,aAAOP,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../../constants/actionTypes\";\nimport _ from \"lodash\";\n\nconst initialState = {\n    isOpen: false,\n    list: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_CART:\n            return {\n                ...state,\n                isOpen: !state.isOpen,\n            };\n        case actionTypes.ADD_CART_ITEM:\n            return {\n                ...state,\n                list: [...state.list, action.payload],\n            }\n        case actionTypes.REMOVE_CART_ITEM:\n            const removeIndex = state.list.findIndex(x => \n                x.id === action.payload.id && \n                _.isEqual(action.payload.attrValues, x.attrValues));\n            return {\n                ...state,\n                list: state.list.splice(removeIndex, 1)\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}