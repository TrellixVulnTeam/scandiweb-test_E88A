{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductWrapper extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      attributes: {},\n      mainImage: '',\n      product: undefined\n    };\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    var _current_state$produc;\n\n    if (((_current_state$produc = current_state.product) === null || _current_state$produc === void 0 ? void 0 : _current_state$produc.id) !== props.product) {\n      return {\n        product: props.products.find(x => x.id === props.product)\n      };\n    }\n\n    return null;\n  }\n\n  setAttributes(value) {\n    this.setState({\n      attributes: value\n    });\n  }\n\n  isAllSelected(product, attributes) {\n    for (let attr of product.attributes) {\n      if (attributes[attr.id] === undefined) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    var _product$prices$find;\n\n    const product = this.state.product;\n    const mainImage = this.state.mainImage;\n    const attributes = this.state.attributes;\n    if (product) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-wrapper\",\n      children: [console.log(product.attributes), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-image-wrapper\",\n        children: [product.inStock ? \"\" : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"out-of-stock\",\n          children: \"Out of stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mainImage.length > 0 ? mainImage : product.gallery[0],\n          alt: product.id,\n          className: \"main-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtons, {\n          product: product,\n          attributes: attributes,\n          setAttributes: this.setAttributes.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_product$prices$find = product.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _product$prices$find === void 0 ? void 0 : _product$prices$find.amount]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.isAllSelected() && this.props.addCartItem({ ...product,\n            attrValues: attributes\n          }),\n          className: 'add-to-cart-button ' + (this.isAllSelected(product, attributes) && product.inStock ? '' : 'add-to-cart-button-disabled'),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-description\",\n          dangerouslySetInnerHTML: {\n            __html: product.description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    products: state.products.list,\n    categories: state.categories.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem\n})(ProductWrapper);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx"],"names":["React","currenciesSymbols","ToggleButtons","connect","addCartItem","ProductWrapper","Component","constructor","state","attributes","mainImage","product","undefined","getDerivedStateFromProps","props","current_state","id","products","find","x","setAttributes","value","setState","isAllSelected","attr","render","console","log","inStock","length","gallery","brand","name","bind","selectedCurrency","prices","currency","amount","Math","random","attrValues","__html","description","mapStateToProps","currencies","selected","list","categories"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\n\nclass ProductWrapper extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            attributes: {},\n            mainImage: '',\n            product: undefined,\n        }\n    }\n\n    static getDerivedStateFromProps(props, current_state) {\n        if (current_state.product?.id !== props.product) {\n            return {\n                product: props.products.find(x => x.id === props.product)\n            }\n        }\n        return null\n    }\n\n    setAttributes(value) {\n        this.setState({\n            attributes: value\n        });\n    }\n\n\n    isAllSelected(product, attributes) {\n        for (let attr of product.attributes) {\n            if (attributes[attr.id] === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n\n        const product = this.state.product;\n\n        const mainImage = this.state.mainImage;\n        const attributes = this.state.attributes;\n\n        if (product) \n        return <div className=\"product-wrapper\">\n            {console.log(product.attributes)}\n            <div className=\"main-image-wrapper\">\n                {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                <img src={mainImage.length > 0\n                    ? mainImage\n                    : product.gallery[0]}\n                    alt={product.id}\n                    className=\"main-image\"></img>\n            </div>\n            <div key={product.id} className=\"product-info\">\n                <h3>{product.brand}</h3>\n                <p>{product.name}</p>\n                <ToggleButtons\n                    product={product}\n                    attributes={attributes}\n                    setAttributes={this.setAttributes.bind(this)}\n                />\n                <h4>Price:</h4>\n                <p key={Math.random()} className=\"price\">\n                {currenciesSymbols[this.props.selectedCurrency] || '$'} {product.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                <button\n                    onClick={() => this.isAllSelected() && this.props.addCartItem({ ...product, attrValues: attributes })}\n                    className={'add-to-cart-button ' + ((this.isAllSelected(product, attributes)) && product.inStock ? '' : 'add-to-cart-button-disabled')}>\n                    Add to cart\n            </button>\n                <div className=\"product-description\" dangerouslySetInnerHTML={{ __html: product.description }}></div>\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        products: state.products.list,\n        categories: state.categories.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem }\n)(ProductWrapper);"]},"metadata":{},"sourceType":"module"}