{"ast":null,"code":"import * as actionTypes from \"../../constants/actionTypes\";\nimport { client } from \"../../utils/ClientApi\";\nexport const requestCategory = async dispatch => async category => {\n  dispatch({\n    type: actionTypes.GET_CATEGORY_START\n  });\n\n  try {\n    const result = await client.query({\n      query: gql`\n                query GetProds {\n                category {\n                    products {\n                    name\n                    id\n                    gallery\n                    }\n                }\n                }\n            `\n    });\n    dispatch({\n      type: actionTypes.GET_CATEGORY_SUCCESS,\n      payload: result.data.category\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.GET_CATEGORY_FAILED,\n      payload: result.data.category\n    });\n  }\n};","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/redux/actions/category.js"],"names":["actionTypes","client","requestCategory","dispatch","category","type","GET_CATEGORY_START","result","query","gql","GET_CATEGORY_SUCCESS","payload","data","e","GET_CATEGORY_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAoB,MAAOC,QAAP,IAAoB;AACnED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEL,WAAW,CAACM;AAApB,GAAD,CAAR;;AACA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,KAAP,CAAa;AAC9BA,MAAAA,KAAK,EAAEC,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAX0C,KAAb,CAArB;AAaAN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,WAAW,CAACU,oBAApB;AAA0CC,MAAAA,OAAO,EAAEJ,MAAM,CAACK,IAAP,CAAYR;AAA/D,KAAD,CAAR;AACH,GAfD,CAeE,OAAOS,CAAP,EAAU;AACRV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,WAAW,CAACc,mBAApB;AAAyCH,MAAAA,OAAO,EAAEJ,MAAM,CAACK,IAAP,CAAYR;AAA9D,KAAD,CAAR;AACH;AACJ,CApBM","sourcesContent":["import * as actionTypes from \"../../constants/actionTypes\";\nimport { client } from \"../../utils/ClientApi\";\n\nexport const requestCategory = async (dispatch) => async (category) => {\n    dispatch({ type: actionTypes.GET_CATEGORY_START });\n    try {\n        const result = await client.query({\n            query: gql`\n                query GetProds {\n                category {\n                    products {\n                    name\n                    id\n                    gallery\n                    }\n                }\n                }\n            `,\n        });\n        dispatch({ type: actionTypes.GET_CATEGORY_SUCCESS, payload: result.data.category });\n    } catch (e) {\n        dispatch({ type: actionTypes.GET_CATEGORY_FAILED, payload: result.data.category });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}