{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/cart/Cart.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart, addCartItem, removeCartItem, changeCartItemAttribute } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { groupItems } from \"../../utils/groupItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = /*#__PURE__*/React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (this.ref && !this.ref.current.contains(event.target) && this.props.isCartOpen === true) {\n      this.props.toggleCart();\n    }\n  }\n\n  stringCount() {\n    const count = this.props.cartItems.length;\n    return `${count} item${count !== 1 ? 's' : ''}`;\n  }\n\n  numberCount() {\n    return this.props.cartItems.length;\n  }\n\n  sumPrice() {\n    let sum = 0;\n\n    for (let product of this.props.cartItems) {\n      sum += product.prices.find(price => price.currency === this.props.selectedCurrency).amount;\n    }\n\n    return sum;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-dd-wrapper\",\n      ref: this.ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.props.isCartOpen ? \"cart-open\" : \"cart-image-circle-container\",\n        children: [this.numberCount() > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-number-circle\",\n          children: this.numberCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          className: \"cart\",\n          src: \"../../empty-cart.svg\",\n          onClick: () => {\n            this.props.toggleCart();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), this.props.isCartOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"cart-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"My bag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 51\n            }, this), \", \", this.stringCount()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), groupItems(this.props.cartItems).map((cartItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: cartItem.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: cartItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [currenciesSymbols[this.props.selectedCurrency] || '$', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: cartItem.prices.find(price => price.currency === this.props.selectedCurrency).amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-attributes\",\n                children: cartItem.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"cart-attributes-block\",\n                  children: [attribute.items.map(attr => attr.value === \"Yes\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: attribute.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 63\n                  }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: cartItem.attrValues[attribute.id] === attr.value ? 'attribute-text-active-cart' : 'attribute-button-cart',\n                      style: { ...(attribute.type === \"swatch\" ? {\n                          backgroundColor: attr.value\n                        } : \"\")\n                      },\n                      onClick: () => this.props.changeCartItemAttribute(cartItem, attribute.id, attr.value),\n                      children: attribute.type === \"swatch\" ? \"\" : attr.value\n                    }, attribute.id + attr.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 65\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 57\n                  }, this)]\n                }, attribute.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-image\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-amount\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  onClick: () => {\n                    this.props.addCartItem({ ...cartItem,\n                      count: undefined\n                    });\n                  },\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: cartItem.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  onClick: () => {\n                    this.props.removeCartItem(cartItem);\n                  },\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: cartItem.gallery[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-popup-total\",\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', this.sumPrice().toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/cart',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.props.toggleCart();\n                },\n                children: \"view bag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-popup-green-button\",\n              children: \"check out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isCartOpen: state.cart.isOpen,\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCart,\n  addCartItem,\n  removeCartItem,\n  changeCartItemAttribute\n})(Cart);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/cart/Cart.jsx"],"names":["React","currenciesSymbols","toggleCart","addCartItem","removeCartItem","changeCartItemAttribute","connect","NavLink","groupItems","Cart","Component","constructor","props","ref","createRef","handleClickOutside","bind","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","current","contains","target","isCartOpen","stringCount","count","cartItems","length","numberCount","sumPrice","sum","product","prices","find","price","currency","selectedCurrency","amount","render","map","cartItem","index","brand","name","attributes","attribute","items","attr","value","id","attrValues","type","backgroundColor","undefined","gallery","toFixed","mapStateToProps","state","cart","isOpen","currencies","selected","list"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart, addCartItem, removeCartItem, changeCartItemAttribute } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { groupItems } from \"../../utils/groupItems\";\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (this.ref && !this.ref.current.contains(event.target) && this.props.isCartOpen === true) {\n            this.props.toggleCart()\n        }\n    }\n\n    stringCount() {\n        const count = this.props.cartItems.length;\n        return `${count} item${count !== 1 ? 's' : ''}`;\n    }\n\n    numberCount() {\n        return this.props.cartItems.length;\n    }\n\n    sumPrice() {\n        let sum = 0;\n        for (let product of this.props.cartItems) {\n            sum += product.prices.find(price => price.currency === this.props.selectedCurrency).amount;\n        }\n\n        return sum;\n    }\n\n    render() {\n        return (\n            <div className=\"cart-dd-wrapper\" ref={this.ref}>\n                <div className={this.props.isCartOpen ?\n                    \"cart-open\" : \"cart-image-circle-container\"}>\n                    {this.numberCount() > 0 &&\n                        <div className=\"products-number-circle\">{this.numberCount()}</div>}\n                    <img alt=\"\" className=\"cart\" src=\"../../empty-cart.svg\" onClick={() => {\n                        this.props.toggleCart();\n                    }}></img>\n                </div>\n\n                {(this.props.isCartOpen) && <div role=\"list\" className=\"cart-list\">\n                    <div className=\"cart-wrapper\">\n                        <p className=\"cart-title\"><b>My bag</b>, {this.stringCount()}</p>\n                        {\n                            groupItems(this.props.cartItems).map((cartItem, index) =>\n                                <div key={index} className=\"cart-popup-item\">\n                                    <div className=\"cart-popup-info\">\n                                        <p>{cartItem.brand}</p>\n                                        <p>{cartItem.name}</p>\n                                        <p>{currenciesSymbols[this.props.selectedCurrency] || '$'}\n                                            <b>{cartItem.prices.find(price =>\n                                                price.currency === this.props.selectedCurrency).amount}</b>\n                                        </p>\n                                        <div className=\"cart-popup-attributes\">\n                                            {\n                                                cartItem.attributes.map(attribute =>\n                                                    <div class=\"cart-attributes-block\" key={attribute.id}>\n                                                        {attribute.items.map(attr => attr.value === \"Yes\"\n                                                            ? <div>{attribute.id}</div>\n                                                            : \"\")}\n                                                        <div>\n                                                            {attribute.items.map(attr =>\n                                                                <button\n                                                                    key={attribute.id + attr.value}\n                                                                    className={cartItem.attrValues[attribute.id] === attr.value\n                                                                        ? 'attribute-text-active-cart' : 'attribute-button-cart'}\n                                                                    style={{\n                                                                        ...attribute.type === \"swatch\"\n                                                                            ? { backgroundColor: attr.value } : \"\"\n                                                                    }}\n                                                                    onClick={() => this.props.changeCartItemAttribute(cartItem, attribute.id, attr.value)}\n                                                                >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n\n                                                            )}\n                                                        </div>\n                                                    </div>)\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"cart-popup-image\">\n                                        <div className=\"cart-popup-amount\">\n                                            <button className=\"cart-popup-button\"\n                                                onClick={() => {\n                                                    this.props.addCartItem({ ...cartItem, count: undefined });\n                                                }}>\n                                                +\n                                            </button>\n                                            <p>{cartItem.count}</p>\n                                            <button className=\"cart-popup-button\" onClick={() => {\n                                                this.props.removeCartItem(cartItem);\n                                            }}>\n                                                -\n                                            </button>\n                                        </div>\n                                        <div className=\"img-wrapper\">\n                                            <img alt=\"\" src={cartItem.gallery[0]}></img>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                        <p className=\"cart-popup-total\">\n                            Total: <b>{currenciesSymbols[this.props.selectedCurrency] || '$'}{this.sumPrice().toFixed(2)}</b>\n                        </p>\n                        <div className=\"cart-buttons\">\n                            <NavLink to={'/cart'}>\n                                <button onClick={() => { this.props.toggleCart() }}>view bag</button>\n                            </NavLink>\n                            <button className=\"cart-popup-green-button\">check out</button>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        isCartOpen: state.cart.isOpen,\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { toggleCart, addCartItem, removeCartItem, changeCartItemAttribute }\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}