{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/header/Cart.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  stringCount() {\n    const count = this.props.cartItems.length;\n    return `${count} item${count !== 1 ? 's' : ''}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        className: this.props.isCartOpen ? \"cart-open\" : \"cart\",\n        src: \"../../empty-cart.svg\",\n        onClick: () => {\n          this.props.toggleCart();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), this.props.isCartOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"cart-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"My bag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 51\n            }, this), \", \", this.stringCount()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), this.props.cartItems.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: product.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this), product.prices.map(price => price.currency === this.props.selectedCurrency && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [currenciesSymbols[this.props.selectedCurrency] || '$', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: price.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 102\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 44\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-attributes\",\n                children: product.attributes.map(attribute => attribute.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  children: item.displayValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 106\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-image\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-popup-amount\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cart-popup-button\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: product.gallery[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 65\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cart-popup-total\",\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', 123]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"view bag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-popup-green-button\",\n              children: \"check out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isCartOpen: state.cart.isOpen,\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCart\n})(Cart);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/header/Cart.jsx"],"names":["React","currenciesSymbols","toggleCart","connect","Cart","Component","constructor","props","stringCount","count","cartItems","length","render","isCartOpen","map","product","brand","name","prices","price","currency","selectedCurrency","amount","attributes","attribute","items","item","displayValue","gallery","mapStateToProps","state","cart","isOpen","currencies","selected","list"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { toggleCart } from \"../../redux/actions/cart\";\nimport { connect } from \"react-redux\";\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    stringCount() {\n        const count = this.props.cartItems.length;\n        return `${count} item${count !== 1 ? 's' : ''}`;\n    }\n\n    render() {\n        return (\n            <div className=\"cart-dd-wrapper\">\n                <img alt=\"\" className={this.props.isCartOpen ? \"cart-open\" : \"cart\"} src=\"../../empty-cart.svg\" onClick={() => {\n                    this.props.toggleCart();\n                }}></img>\n                {(this.props.isCartOpen) && <div role=\"list\" className=\"cart-list\">\n                    <div className=\"cart-wrapper\">\n                        <p className=\"cart-title\"><b>My bag</b>, {this.stringCount()}</p>\n                        {\n                            this.props.cartItems.map(product => <div className=\"cart-popup-item\">\n                                <div className=\"cart-popup-info\">\n                                    <p>{product.brand}</p>\n                                    <p>{product.name}</p>\n                                    {product.prices.map(price => price.currency === this.props.selectedCurrency\n                                        && <p>{currenciesSymbols[this.props.selectedCurrency] || '$'}<b>{price.amount}</b></p>)}\n                                    <div className=\"cart-popup-attributes\">\n                                        {product.attributes.map(attribute => attribute.items.map(item => <button className=\"cart-popup-button\">\n                                            {item.displayValue}\n                                        </button>))}\n                                    </div>\n                                </div>\n                                <div className=\"cart-popup-image\">\n                                    <div className=\"cart-popup-amount\">\n                                        <button className=\"cart-popup-button\">\n                                            +\n                                        </button>\n                                        <p>1</p>\n                                        <button className=\"cart-popup-button\">\n                                            -\n                                        </button>\n                                    </div>\n                                    <div className=\"img-wrapper\">\n                                        <img alt=\"\" src={product.gallery[0]}></img>\n                                    </div>\n                                </div>\n                            </div>\n                            )\n                        }\n                        <p className=\"cart-popup-total\">Total: <b>{currenciesSymbols[this.props.selectedCurrency] || '$'}{123}</b></p>\n                        <div className=\"cart-buttons\">\n                            <button>view bag</button>\n                            <button className=\"cart-popup-green-button\">check out</button>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return { \n        isCartOpen: state.cart.isOpen,\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { toggleCart }\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}