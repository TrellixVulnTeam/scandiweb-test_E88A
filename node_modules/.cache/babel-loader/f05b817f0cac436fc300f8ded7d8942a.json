{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cache: new InMemoryCache()\n});\nexport class ProductCard extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Query, {\n      query: getRates,\n      children: ({\n        loading,\n        error,\n        data\n      }) => {\n        if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }, this);\n        if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n        return data.products.map(({\n          name,\n          price\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${name}: ${price}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this); // return items\n    //   .find((x) => x.images)\n    //   .images.map((imgObject) => (\n    //     <div key={Math.random() * 10}\n    //       className={\n    //         imgObject.outOfStock === true ? \"card-inactive\" : \"card\"\n    //       }\n    //     >\n    //     {\n    //         imgObject.outOfStock === true ? <p className=\"out-of-stock\">Out of stock</p> : ''\n    //     }\n    //     {\n    //     }\n    //   <img className=\"item-image\" src={imgObject.image}></img>\n    //   <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n    //   <div className=\"item-info\">\n    //     <p>Apollo Running Short</p>\n    //     <p className=\"price\">$50.00</p>\n    //   </div>\n    // </div>\n    //   ));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","ProductCard","Component","render","getRates","loading","error","data","products","map","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,GALJ,QAMS,gBANT;;AAQE,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKF,OAAO,MAAMO,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAC/CC,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,QAAd;AAAA,gBACN,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,OAAD,KAA8B;AAC/B,YAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACb,YAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,eAAOC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAD,kBACvB;AAAA,iCACE;AAAA,sBAAK,GAAED,IAAK,KAAIC,KAAM;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,IAAV;AAAA;AAAA;AAAA;AAAA,gBADK,CAAP;AAKC;AATM;AAAA;AAAA;AAAA;AAAA,YAAP,CADK,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACD;;AAlC8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    useQuery,\n    gql\n  } from \"@apollo/client\";\n  \n  const client = new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache()\n  });\n\nexport class ProductCard extends React.Component {\n  render() {\n      return <Query query={getRates} >\n      {({ loading, error, data }) => {\n      if (loading) return <p>Loadingâ€¦</p>;\n      if (error) return <p>Error :(</p>;\n      return data.products.map(({ name, price }) => (\n        <div key={name}>\n          <p>{`${name}: ${price}`}</p>\n        </div>\n       ));\n      }}\n    </Query>\n    // return items\n    //   .find((x) => x.images)\n    //   .images.map((imgObject) => (\n    //     <div key={Math.random() * 10}\n    //       className={\n    //         imgObject.outOfStock === true ? \"card-inactive\" : \"card\"\n    //       }\n    //     >\n    //     {\n    //         imgObject.outOfStock === true ? <p className=\"out-of-stock\">Out of stock</p> : ''\n    //     }\n    //     {\n    //     }\n        //   <img className=\"item-image\" src={imgObject.image}></img>\n        //   <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n        //   <div className=\"item-info\">\n        //     <p>Apollo Running Short</p>\n        //     <p className=\"price\">$50.00</p>\n        //   </div>\n        // </div>\n    //   ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}