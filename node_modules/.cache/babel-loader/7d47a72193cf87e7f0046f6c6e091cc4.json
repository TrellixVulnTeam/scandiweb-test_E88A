{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"https://48p1r2roz4.sse.codesandbox.io/\",\n  cache: new InMemoryCache()\n});\nconst PRODUCT_NAMES = gql`\nquery GetProductNames {\n  category {\n    products {\n      name\n    }\n  }\n}`;\n\nfunction ProductNames() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCT_NAMES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return data.category.map(({\n    products\n  }) => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [category, \": \", products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, 'category', false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  });\n}\n\n_s(ProductNames, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductNames;\nclient.query({\n  query: gql`\n      query GetProductNames {\n        category {\n          products {\n            name\n          }\n        }\n      }\n    `\n}).then(result => console.log(result));\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductNames\");","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","PRODUCT_NAMES","ProductNames","loading","error","data","category","map","products","query","then","result","console","log","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;AAQA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,wCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMO,aAAa,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,EAPA;;AASA,SAASK,YAAT,GAAwB;AAAA;;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAgB;AACvC;AAAA;AAAA,6BACE;AAAA,mBACGF,QADH,QACeE,QADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAS,UAAT;AAAA;AAAA;AAAA;AAAA;AAKD,GANM,CAAP;AAOD;;GAbQN,Y;UAC0BN,Q;;;KAD1BM,Y;AAeTJ,MAAM,CACHW,KADH,CACS;AACLA,EAAAA,KAAK,EAAEZ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATS,CADT,EAYGa,IAZH,CAYQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAZlB;AAcApB,QAAQ,CAACuB,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEhB,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://48p1r2roz4.sse.codesandbox.io/\",\n  cache: new InMemoryCache()\n});\n\nconst PRODUCT_NAMES = gql`\nquery GetProductNames {\n  category {\n    products {\n      name\n    }\n  }\n}`;\n\nfunction ProductNames() {\n  const { loading, error, data } = useQuery(PRODUCT_NAMES);\n\n  if (loading) return <p>loading...</p> \n  if (error) return <p>error...</p>\n\n  return data.category.map(({products}) => {\n    <div key='category'>\n      <p>\n        {category}: {products}\n      </p>\n    </div>\n  })\n}\n\nclient\n  .query({\n    query: gql`\n      query GetProductNames {\n        category {\n          products {\n            name\n          }\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}