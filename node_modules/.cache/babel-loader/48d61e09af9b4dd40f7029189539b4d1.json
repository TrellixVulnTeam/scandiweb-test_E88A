{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { groupItems } from \"../../utils/groupItems\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setButtonClassName = (attr, id, attribute) => {\n      if (attr.value === id[attribute.id]) {\n        return attribute.type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isCartOpen) {\n      this.props.toggleCart();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-page-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), groupItems(this.props.cartItems).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info product-info-cart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), item.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-attributes\",\n            children: [attribute.items.map(attr => attr.value === \"Yes\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: attribute.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 51\n            }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.setButtonClassName(attr, item.attrValues, attribute),\n                style: { ...(attribute.type === \"swatch\" ? {\n                    backgroundColor: attr.value\n                  } : \"\")\n                },\n                onClick: () => this.props.changeCartItemAttribute(item, attribute.id, attr.value),\n                children: attribute.type === \"swatch\" ? \"\" : attr.value\n              }, attribute.id + attr.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 78\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this)]\n          }, attribute.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-popup-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-popup-button\",\n              onClick: () => {\n                this.props.addCartItem({ ...item,\n                  count: undefined\n                });\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-popup-button\",\n              onClick: () => {\n                this.props.removeCartItem(item);\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-wrapper\",\n            children: item.gallery.length > 1 ? /*#__PURE__*/_jsxDEV(AwesomeSlider, {\n              children: item.gallery.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n                alt: \"\",\n                \"data-src\": img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 70\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: item.gallery[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list,\n    isCartOpen: state.cart.isOpen\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  removeCartItem,\n  changeCartItemAttribute,\n  toggleCart\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","removeCartItem","changeCartItemAttribute","toggleCart","currenciesSymbols","groupItems","AwesomeSlider","CartPage","Component","setButtonClassName","attr","id","attribute","value","type","componentDidMount","props","isCartOpen","render","cartItems","map","item","brand","name","attributes","items","attrValues","backgroundColor","count","undefined","gallery","length","img","mapStateToProps","state","selectedCurrency","currencies","selected","cart","list","products","isOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { groupItems } from \"../../utils/groupItems\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\n\nclass CartPage extends React.Component {\n\n    componentDidMount() {\n        if (this.props.isCartOpen) {\n            this.props.toggleCart();\n        }\n    }\n\n    setButtonClassName = (attr, id, attribute) => {\n        if (attr.value === id[attribute.id]) {\n            return attribute.type === \"swatch\" \n            ? \"attribute-color-active\" \n            : \"attribute-text-active\";\n        } else {\n            return \"attribute-button\";\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <p className=\"cart-page-title\">cart</p>\n\n                {\n                    groupItems(this.props.cartItems).map(item =>\n                        <div key={item.id} className=\"cart-item-container\">\n                            <div className=\"product-info product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                {/* <p className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'}\n                                    {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}\n                                </p> */}\n                                {\n                                    item.attributes.map(attribute => \n                                        <div className=\"cart-attributes\" key={attribute.id}>\n                                            {attribute.items.map(attr => attr.value === \"Yes\"\n                                                ? <div>{attribute.id}</div>\n                                                : \"\")}\n                                            <div>\n                                                {attribute.items.map(attr => <button\n                                                    key={attribute.id + attr.value}\n                                                    className={this.setButtonClassName(attr, item.attrValues, attribute)}\n                                                    style={{ ...attribute.type === \"swatch\" \n                                                    ? { backgroundColor: attr.value } : \"\" }}\n                                                    onClick={() => \n                                                        this.props.changeCartItemAttribute(item, attribute.id, attr.value)\n                                                    }\n                                                >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                                )}\n                                        </div>\n                                    </div>)\n                                }\n\n                            </div>\n                            <div className=\"cart-popup-image\">\n                                <div className=\"cart-popup-amount\">\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...item, count: undefined });\n                                        }}>\n                                        +\n                                    </button>\n                                    <p>{item.count}</p>\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.removeCartItem(item);\n                                        }}>\n                                        -\n                                    </button>\n                                </div>\n                                <div className=\"img-wrapper\">\n                                    {item.gallery.length > 1\n                                        ? <AwesomeSlider>\n                                            {item.gallery.map(img => <div alt=\"\" data-src={img}></div>)}\n                                        </AwesomeSlider>\n                                        : <div>\n                                            <img alt=\"\" src={item.gallery[0]}></img>\n                                    </div>}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n        isCartOpen: state.cart.isOpen\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}