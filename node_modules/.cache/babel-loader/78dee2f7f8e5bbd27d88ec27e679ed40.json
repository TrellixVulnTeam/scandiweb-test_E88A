{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/cart/CartPage.jsx\";\nimport React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { groupItems } from \"../../utils/groupItems\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setButtonClassName = (attr, id, attribute) => {\n      if (attr.value === id[attribute.id]) {\n        return attribute.type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n      } else {\n        return \"attribute-button\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isCartOpen) {\n      this.props.toggleCart();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cart-page-title\",\n        children: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), groupItems(this.props.cartItems).map(item => {\n        var _item$prices$find;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info product-info-cart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [currenciesSymbols[this.props.selectedCurrency] || '$', (_item$prices$find = item.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _item$prices$find === void 0 ? void 0 : _item$prices$find.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), item.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-attributes\",\n              children: [attribute.items.map(attr => attr.value === \"Yes\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: attribute.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 47\n              }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: attribute.items.map(attr => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: this.setButtonClassName(attr, item.attrValues, attribute),\n                  style: { ...(attribute.type === \"swatch\" ? {\n                      backgroundColor: attr.value\n                    } : \"\")\n                  },\n                  onClick: () => this.props.changeCartItemAttribute(item, attribute.id, attr.value),\n                  children: attribute.type === \"swatch\" ? \"\" : attr.value\n                }, attribute.id + attr.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 74\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this)]\n            }, attribute.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 70\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-popup-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-popup-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.addCartItem({ ...item,\n                    count: undefined\n                  });\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cart-popup-button\",\n                onClick: () => {\n                  this.props.removeCartItem(item);\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-wrapper\",\n              children: item.gallery.length > 1 ? /*#__PURE__*/_jsxDEV(AwesomeSlider, {\n                children: item.gallery.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n                  alt: \"\",\n                  \"data-src\": img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 70\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 43\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: item.gallery[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), \"}\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    cartItems: state.cart.list,\n    products: state.products.list,\n    isCartOpen: state.cart.isOpen\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  removeCartItem,\n  changeCartItemAttribute,\n  toggleCart\n})(CartPage);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/cart/CartPage.jsx"],"names":["React","Wrapper","connect","addCartItem","removeCartItem","changeCartItemAttribute","toggleCart","currenciesSymbols","groupItems","AwesomeSlider","CartPage","Component","setButtonClassName","attr","id","attribute","value","type","componentDidMount","props","isCartOpen","render","cartItems","map","item","brand","name","selectedCurrency","prices","find","x","currency","amount","attributes","items","attrValues","backgroundColor","count","undefined","gallery","length","img","mapStateToProps","state","currencies","selected","cart","list","products","isOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport { connect } from \"react-redux\";\nimport { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart } from \"../../redux/actions/cart\";\nimport { currenciesSymbols } from \"../../constants\";\nimport { groupItems } from \"../../utils/groupItems\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\n\nclass CartPage extends React.Component {\n\n    componentDidMount() {\n        if (this.props.isCartOpen) {\n            this.props.toggleCart();\n        }\n    }\n\n    setButtonClassName = (attr, id, attribute) => {\n        if (attr.value === id[attribute.id]) {\n            return attribute.type === \"swatch\" ? \"attribute-color-active\" : \"attribute-text-active\";\n        } else {\n            return \"attribute-button\";\n        }\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <p className=\"cart-page-title\">cart</p>\n\n                {\n                    groupItems(this.props.cartItems).map(item =>\n                        <div key={item.id} className=\"cart-item-container\">\n                            <div className=\"product-info product-info-cart\">\n                                <h3>{item.brand}</h3>\n                                <p>{item.name}</p>\n                                <p className=\"price\">\n                                    {currenciesSymbols[this.props.selectedCurrency] || '$'}\n                                    {item.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}\n                                </p>\n                                {\n                                    item.attributes.map(attribute => <div className=\"cart-attributes\" key={attribute.id}>\n                                        {attribute.items.map(attr => attr.value === \"Yes\"\n                                            ? <div>{attribute.id}</div>\n                                            : \"\")}\n                                        <div>\n                                            {attribute.items.map(attr => <button\n                                                key={attribute.id + attr.value}\n                                                className={this.setButtonClassName(attr, item.attrValues, attribute)}\n                                                style={{ ...attribute.type === \"swatch\" ? { backgroundColor: attr.value } : \"\" }}\n                                                onClick={() => this.props.changeCartItemAttribute(item, attribute.id, attr.value)}\n                                            >{attribute.type === \"swatch\" ? \"\" : attr.value}</button>\n                                            )}\n                                        </div>\n                                    </div>)\n                                }\n\n                            </div>\n                            <div className=\"cart-popup-image\">\n                                <div className=\"cart-popup-amount\">\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.addCartItem({ ...item, count: undefined });\n                                        }}>\n                                        +\n                                    </button>\n                                    <p>{item.count}</p>\n                                    <button className=\"cart-popup-button\"\n                                        onClick={() => {\n                                            this.props.removeCartItem(item);\n                                        }}>\n                                        -\n                                    </button>\n                                </div>\n                                <div className=\"img-wrapper\">\n                                    {item.gallery.length > 1\n                                        ? <AwesomeSlider>\n                                            {item.gallery.map(img => <div alt=\"\" data-src={img}></div>)}\n                                        </AwesomeSlider>\n                                        : <div>\n                                            <img alt=\"\" src={item.gallery[0]}></img>}\n                                    </div>}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        cartItems: state.cart.list,\n        products: state.products.list,\n        isCartOpen: state.cart.isOpen\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, removeCartItem, changeCartItemAttribute, toggleCart }\n)(CartPage);"]},"metadata":{},"sourceType":"module"}