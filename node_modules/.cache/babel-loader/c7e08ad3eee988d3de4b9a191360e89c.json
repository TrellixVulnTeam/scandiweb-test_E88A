{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/Dropdown.jsx\";\nimport React from \"react\";\nimport FontAwesome from 'react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleList = () => {\n      this.setState(prevState => ({\n        isListOpen: !prevState.isListOpen\n      }));\n    };\n\n    this.selectItem = item => {\n      const {\n        resetThenSet\n      } = this.props;\n      const {\n        title,\n        id,\n        key\n      } = item;\n      console.log(item.title.slice(2));\n      this.setState({\n        headerTitle: title,\n        isListOpen: false\n      }, () => resetThenSet(id, key));\n    };\n\n    this.state = {\n      isListOpen: false,\n      headerTitle: this.props.title\n    };\n  }\n\n  render() {\n    const {\n      isListOpen,\n      headerTitle\n    } = this.state;\n    const {\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"dd-header\",\n        onClick: this.toggleList,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isListOpen ? \"dd-header-title open\" : \"dd-header-title\",\n          children: [headerTitle, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), isListOpen ? /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-up\",\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-down\",\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), isListOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"dd-list\",\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"dd-list-item\",\n          onClick: () => this.selectItem(item),\n          children: [item.title, ' ', item.selected]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/Dropdown.jsx"],"names":["React","FontAwesome","Dropdown","Component","constructor","props","toggleList","setState","prevState","isListOpen","selectItem","item","resetThenSet","title","id","key","console","log","slice","headerTitle","state","render","list","map","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,OAAO,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQhBC,UARgB,GAQH,MAAM;AACjB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADG,OAAL,CAAvB;AAGF,KAZgB;;AAAA,SAcjBC,UAdiB,GAcHC,IAAD,IAAU;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKP,KAA9B;AACA,YAAM;AAAEQ,QAAAA,KAAF;AAASC,QAAAA,EAAT;AAAaC,QAAAA;AAAb,UAAqBJ,IAA3B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,KAAL,CAAWK,KAAX,CAAiB,CAAjB,CAAZ;AAEA,WAAKX,QAAL,CAAc;AACZY,QAAAA,WAAW,EAAEN,KADD;AAEZJ,QAAAA,UAAU,EAAE;AAFA,OAAd,EAGG,MAAMG,YAAY,CAACE,EAAD,EAAKC,GAAL,CAHrB;AAID,KAvBe;;AAEd,SAAKK,KAAL,GAAa;AACXX,MAAAA,UAAU,EAAE,KADD;AAEXU,MAAAA,WAAW,EAAE,KAAKd,KAAL,CAAWQ;AAFb,KAAb;AAID;;AAmBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,UAAF;AAAcU,MAAAA;AAAd,QAA8B,KAAKC,KAAzC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,KAAKjB,KAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,OAAO,EAAE,KAAKC,UAHhB;AAAA,gCAKE;AAAK,UAAA,SAAS,EAAEG,UAAU,GAAG,sBAAH,GAA4B,iBAAtD;AAAA,qBAA0EU,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGV,UAAU,gBACP,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADO,gBAEP,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBARN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWGA,UAAU,iBACT;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,SAFZ;AAAA,kBAIGa,IAAI,CAACC,GAAL,CAAUZ,IAAD,iBACR;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAJjB;AAAA,qBAMGA,IAAI,CAACE,KANR,EAOG,GAPH,EAQGF,IAAI,CAACa,QARR;AAAA,WAGOb,IAAI,CAACG,EAHZ;AAAA;AAAA;AAAA;AAAA,gBADD;AAJH;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AA/DuC","sourcesContent":["import React from \"react\";\nimport FontAwesome from 'react-fontawesome';\n\nexport class Dropdown extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          isListOpen: false,\n          headerTitle: this.props.title\n        }\n      }\n\n      toggleList = () => {\n        this.setState(prevState => ({\n          isListOpen: !prevState.isListOpen\n       }))\n     }\n\n     selectItem = (item) => {\n        const { resetThenSet } = this.props;\n        const { title, id, key } = item;\n        console.log(item.title.slice(2))\n      \n        this.setState({\n          headerTitle: title,\n          isListOpen: false,\n        }, () => resetThenSet(id, key));\n      }\n      \n      render() {\n        const { isListOpen, headerTitle } = this.state;\n        const { list } = this.props;\n      \n        return (\n          <div className=\"dd-wrapper\">\n            <button\n              type=\"button\"\n              className=\"dd-header\"\n              onClick={this.toggleList}\n            >\n              <div className={isListOpen ? \"dd-header-title open\" : \"dd-header-title\"}>{headerTitle} </div>\n              {isListOpen\n                ? <FontAwesome name=\"angle-up\" size=\"2x\" />\n                : <FontAwesome name=\"angle-down\" size=\"2x\" />}\n            </button>\n            {isListOpen && (\n              <div\n                role=\"list\"\n                className=\"dd-list\"\n              >\n                {list.map((item) => (\n                  <button\n                    type=\"button\"\n                    className=\"dd-list-item\"\n                    key={item.id}\n                    onClick={() => this.selectItem(item)}\n                  >\n                    {item.title}\n                    {' '}\n                    {item.selected}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        )\n      }\n}"]},"metadata":{},"sourceType":"module"}