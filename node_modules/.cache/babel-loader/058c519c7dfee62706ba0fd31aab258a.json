{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductWrapper extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mainImage: '',\n      product: undefined,\n      attributes: {}\n    };\n  }\n\n  selectAndLoadCategory() {\n    const foundCategory = this.props.categories.find(x => x === this.props.category);\n\n    if (foundCategory) {\n      this.props.selectCategory(foundCategory);\n      this.props.requestProducts(foundCategory);\n    } else {\n      window.location.href = '/';\n    }\n  }\n\n  componentDidMount() {\n    this.selectAndLoadCategory();\n  }\n\n  componentDidUpdate() {\n    this.selectAndLoadCategory();\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    var _current_state$produc;\n\n    if (((_current_state$produc = current_state.product) === null || _current_state$produc === void 0 ? void 0 : _current_state$produc.id) !== props.product) {\n      return {\n        product: props.products.find(x => x.id === props.product)\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const product = this.state.product;\n\n    if (!product) {\n      console.log('k');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./a-logo.png\",\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    products: state.products.list,\n    categories: state.categories.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  selectCategory,\n  requestProducts\n})(ProductWrapper);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx"],"names":["React","currenciesSymbols","ToggleButtons","connect","addCartItem","selectCategory","requestProducts","ProductWrapper","Component","constructor","state","mainImage","product","undefined","attributes","selectAndLoadCategory","foundCategory","props","categories","find","x","category","window","location","href","componentDidMount","componentDidUpdate","getDerivedStateFromProps","current_state","id","products","render","console","log","mapStateToProps","selectedCurrency","currencies","selected","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,eAAT,QAAgC,8BAAhC;;AAGA,OAAO,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAChDC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,OAAO,EAAEC,SAFA;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKH;;AAEDC,EAAAA,qBAAqB,GAAG;AACpB,UAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BC,CAAC,IAAIA,CAAC,KAAK,KAAKH,KAAL,CAAWI,QAAjD,CAAtB;;AACA,QAAIL,aAAJ,EAAmB;AACf,WAAKC,KAAL,CAAWZ,cAAX,CAA0BW,aAA1B;AACA,WAAKC,KAAL,CAAWX,eAAX,CAA2BU,aAA3B;AACH,KAHD,MAGO;AACHM,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,qBAAL;AACH;;AAEDW,EAAAA,kBAAkB,GAAG;AACjB,SAAKX,qBAAL;AACH;;AAE8B,SAAxBY,wBAAwB,CAACV,KAAD,EAAQW,aAAR,EAAuB;AAAA;;AAClD,QAAI,0BAAAA,aAAa,CAAChB,OAAd,gFAAuBiB,EAAvB,MAA8BZ,KAAK,CAACL,OAAxC,EAAiD;AAC7C,aAAO;AACHA,QAAAA,OAAO,EAAEK,KAAK,CAACa,QAAN,CAAeX,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACS,EAAF,KAASZ,KAAK,CAACL,OAAxC;AADN,OAAP;AAGH;;AACD,WAAO,IAAP;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,UAAMnB,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;;AAEA,QAAI,CAACA,OAAL,EAAc;AACVoB,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;;AAED,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACH;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC,EAA5B;AAA+B,QAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AA6BH;;AAzE+C;;AA6EpD,MAAMC,eAAe,GAAGxB,KAAK,IAAI;AAC7B,SAAO;AACHyB,IAAAA,gBAAgB,EAAEzB,KAAK,CAAC0B,UAAN,CAAiBC,QADhC;AAEHP,IAAAA,QAAQ,EAAEpB,KAAK,CAACoB,QAAN,CAAeQ,IAFtB;AAGHpB,IAAAA,UAAU,EAAER,KAAK,CAACQ,UAAN,CAAiBoB;AAH1B,GAAP;AAKH,CAND;;AAQA,eAAenC,OAAO,CAClB+B,eADkB,EAElB;AAAE9B,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAFkB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { selectCategory } from '../../redux/actions/categories';\nimport { requestProducts } from '../../redux/actions/products';\n\n\nexport class ProductWrapper extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            mainImage: '',\n            product: undefined,\n            attributes: {}\n        }\n    }\n\n    selectAndLoadCategory() {\n        const foundCategory = this.props.categories.find(x => x === this.props.category);\n        if (foundCategory) {\n            this.props.selectCategory(foundCategory);\n            this.props.requestProducts(foundCategory);\n        } else {\n            window.location.href = '/';\n        }\n    }\n\n    componentDidMount() {\n        this.selectAndLoadCategory();\n    }\n\n    componentDidUpdate() {\n        this.selectAndLoadCategory();\n    }\n\n    static getDerivedStateFromProps(props, current_state) {\n        if (current_state.product?.id !== props.product) {\n            return {\n                product: props.products.find(x => x.id === props.product)\n            }\n        }\n        return null\n    }\n\n    render() {\n        const product = this.state.product;\n\n        if (!product) {\n            console.log('k');\n        }\n\n        return <div className=\"product-wrapper\">\n            <img src=\"./a-logo.png\" alt=\"\" srcset=\"\"/>\n            {/* <div className=\"main-image-wrapper\">\n                {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                <img src={this.state.mainImage.length > 0\n                    ? this.state.mainImage\n                    : product.gallery[0]}\n                    alt={product.id}\n                    className=\"main-image\"></img>\n            </div>\n            <div key={product.id} className=\"product-info\">\n                <h3>{product.brand}</h3>\n                <p>{product.name}</p>\n                <ToggleButtons\n                    product={product}\n                    attributes={this.state.attributes}\n                    setAttributes={this.setAttributes.bind(this)}\n                />\n                <h4>Price:</h4>\n                <p key={Math.random()} className=\"price\">\n                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {product.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                <button\n                    onClick={() => this.isAllSelected() && this.props.addCartItem({ ...product, attrValues: this.state.attributes })}\n                    className={'add-to-cart-button ' + (this.isAllSelected() && product.inStock ? '' : 'add-to-cart-button-disabled')}>\n                    Add to cart\n            </button>\n                <div className=\"product-description\" dangerouslySetInnerHTML={{ __html: product.description }}></div>\n            </div> */}\n        </div>\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        products: state.products.list,\n        categories: state.categories.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, selectCategory, requestProducts }\n)(ProductWrapper);"]},"metadata":{},"sourceType":"module"}