{"ast":null,"code":"import { gql } from '@apollo/client';\nimport * as actionTypes from '../../constants/actionTypes';\nimport { client } from '../../utils/ClientApi';\nexport const requestProducts = categoryName => async dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCTS_START\n  });\n\n  try {\n    const result = await client.query({\n      query: gql`\n                query getProducts {\n                    category(input: { title: \"${categoryName}\" }) {\n                        products {\n                            id\n                            name\n                            inStock\n                            gallery\n                            description\n                            category\n                            brand\n                            prices {\n                                amount\n                                currency\n                            }\n                            attributes {\n                                name\n                                id\n                                type\n                                items {\n                                    displayValue\n                                    value\n                                    id\n                                  }\n                            }\n                        }\n                    }\n                }\n            `\n    });\n    console.log(result);\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: result.data.category.products\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAILED\n    });\n  }\n};","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/redux/actions/products.js"],"names":["gql","actionTypes","client","requestProducts","categoryName","dispatch","type","GET_PRODUCTS_START","result","query","console","log","GET_PRODUCTS_SUCCESS","payload","data","category","products","e","GET_PRODUCTS_FAILED"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,WAAZ,MAA6B,6BAA7B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,OAAO,MAAMC,eAAe,GAAIC,YAAD,IAAkB,MAAMC,QAAN,IAAkB;AAC/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,WAAW,CAACM;AAApB,GAAD,CAAR;;AACA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,KAAP,CAAa;AAC9BA,MAAAA,KAAK,EAAET,GAAI;AACvB;AACA,gDAAgDI,YAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7B0C,KAAb,CAArB;AA+BAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,WAAW,CAACW,oBAApB;AAA0CC,MAAAA,OAAO,EAAEL,MAAM,CAACM,IAAP,CAAYC,QAAZ,CAAqBC;AAAxE,KAAD,CAAR;AACH,GAlCD,CAkCE,OAAOC,CAAP,EAAU;AACRZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,WAAW,CAACiB;AAApB,KAAD,CAAR;AACH;AACJ,CAvCM","sourcesContent":["import { gql } from '@apollo/client';\nimport * as actionTypes from '../../constants/actionTypes'\nimport { client } from '../../utils/ClientApi';\n\nexport const requestProducts = (categoryName) => async dispatch => {\n    dispatch({ type: actionTypes.GET_PRODUCTS_START });\n    try {\n        const result = await client.query({\n            query: gql`\n                query getProducts {\n                    category(input: { title: \"${categoryName}\" }) {\n                        products {\n                            id\n                            name\n                            inStock\n                            gallery\n                            description\n                            category\n                            brand\n                            prices {\n                                amount\n                                currency\n                            }\n                            attributes {\n                                name\n                                id\n                                type\n                                items {\n                                    displayValue\n                                    value\n                                    id\n                                  }\n                            }\n                        }\n                    }\n                }\n            `\n        });\n        console.log(result)\n        dispatch({ type: actionTypes.GET_PRODUCTS_SUCCESS, payload: result.data.category.products });\n    } catch (e) {\n        dispatch({ type: actionTypes.GET_PRODUCTS_FAILED });\n    }\n}"]},"metadata":{},"sourceType":"module"}