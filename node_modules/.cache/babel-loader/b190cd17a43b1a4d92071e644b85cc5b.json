{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductWrapper extends React.Component {\n  constructor() {\n    super();\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      attributes: {},\n      mainImage: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, prevContext) {\n    const el = this.myRef.current;\n    console.log('el', el);\n    console.log('el_inner', el.innerHTML); // do something with el.innerHTML\n  }\n\n  setAttributes(value) {\n    this.setState({\n      attributes: value\n    });\n  }\n\n  isAllSelected(product, attributes) {\n    if (product !== undefined) for (let attr of product.attributes) {\n      if (attributes[attr.id] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  render() {\n    var _product$prices$find;\n\n    const product = this.props.product;\n    const mainImage = this.state.mainImage;\n    const attributes = this.state.attributes;\n\n    if (!product) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-image-wrapper\",\n        children: [product.inStock ? \"\" : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"out-of-stock\",\n          children: \"Out of stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mainImage.length > 0 ? mainImage : product.gallery[0],\n          alt: product.id,\n          className: \"main-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtons, {\n          product: product,\n          attributes: attributes,\n          setAttributes: this.setAttributes.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [currenciesSymbols[this.props.selectedCurrency] || '$', (_product$prices$find = product.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _product$prices$find === void 0 ? void 0 : _product$prices$find.amount]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.isAllSelected() && this.props.addCartItem({ ...product,\n            attrValues: attributes\n          }),\n          className: 'add-to-cart-button ' + (this.isAllSelected(product, attributes) && product.inStock ? '' : 'add-to-cart-button-disabled'),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-description\",\n          ref: this.myRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    product: state.products.selected\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem\n})(ProductWrapper);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx"],"names":["React","currenciesSymbols","ToggleButtons","connect","addCartItem","ProductWrapper","Component","constructor","myRef","createRef","state","attributes","mainImage","componentDidUpdate","prevProps","prevState","prevContext","el","current","console","log","innerHTML","setAttributes","value","setState","isAllSelected","product","undefined","attr","id","render","props","inStock","length","gallery","brand","name","bind","selectedCurrency","prices","find","x","currency","amount","Math","random","attrValues","mapStateToProps","currencies","selected","products"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { connect } from \"react-redux\";\nimport { addCartItem } from '../../redux/actions/cart';\n\nclass ProductWrapper extends React.Component {\n    constructor() {\n        super();\n        this.myRef = React.createRef();\n        this.state = {\n            attributes: {},\n            mainImage: '',\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, prevContext) {\n        const el = this.myRef.current;\n        console.log('el', el);\n        console.log('el_inner', el.innerHTML);\n        // do something with el.innerHTML\n      }\n\n    setAttributes(value) {\n        this.setState({\n            attributes: value\n        });\n    }\n\n    isAllSelected(product, attributes) {\n        if (product !== undefined)\n            for (let attr of product.attributes) {\n                if (attributes[attr.id] === undefined) {\n                    return false;\n                }\n            }\n        return true;\n    }\n\n    render() {\n\n        const product = this.props.product;\n        const mainImage = this.state.mainImage;\n        const attributes = this.state.attributes;\n\n\n        if (!product) {\n            return null;\n        }\n            return <div className=\"product-wrapper\">\n                    <div className=\"main-image-wrapper\">\n                        {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                        <img src={mainImage.length > 0\n                            ? mainImage\n                            : product.gallery[0]}\n                            alt={product.id}\n                            className=\"main-image\"></img>\n                    </div>\n                    <div key={product.id} className=\"product-info\">\n                        <h3>{product.brand}</h3>\n                        <p>{product.name}</p>\n                        <ToggleButtons\n                            product={product}\n                            attributes={attributes}\n                            setAttributes={this.setAttributes.bind(this)}\n                        />\n                        <h4>Price:</h4>\n                        <p key={Math.random()} className=\"price\">\n                            {currenciesSymbols[this.props.selectedCurrency] || '$'}\n                            {product.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                        <button\n                            onClick={() => this.isAllSelected() && this.props.addCartItem({ ...product, attrValues: attributes })}\n                            className={'add-to-cart-button ' + ((this.isAllSelected(product, attributes))\n                                && product.inStock ? '' : 'add-to-cart-button-disabled')}>\n                            Add to cart\n                        </button>\n                        <div className=\"product-description\"  ref={this.myRef}></div>\n                    </div>\n                </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        product: state.products.selected\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem }\n)(ProductWrapper);"]},"metadata":{},"sourceType":"module"}