{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  uri: 'http://localhost:4000/graphql',\n  // Provide some optional constructor fields\n  name: 'react-web-client',\n  version: '1.3',\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network'\n    }\n  }\n});\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n              }\n            }\n          }\n        `\n    }).then(result => this.setState(prevState => ({\n      name: result.data.category.products[0].name\n    })));\n  }\n\n  render() {\n    return items.find(x => x.images).images.map(imgObject => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: imgObject.outOfStock === true ? \"card-inactive\" : \"card\",\n      children: [imgObject.outOfStock === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"out-of-stock\",\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"item-image\",\n        src: imgObject.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","gql","cache","InMemoryCache","client","ApolloClient","uri","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","ProductCard","Component","constructor","props","state","componentDidMount","query","then","result","setState","prevState","data","category","products","render","find","x","images","map","imgObject","outOfStock","image","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,KAAK,GAAG,IAAIC,aAAJ,EAAd;AAEA,MAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAiB;AAC9B;AACAH,EAAAA,KAAK,EAAEA,KAFuB;AAG9BI,EAAAA,GAAG,EAAE,+BAHyB;AAK9B;AACAC,EAAAA,IAAI,EAAE,kBANwB;AAO9BC,EAAAA,OAAO,EAAE,KAPqB;AAQ9BC,EAAAA,kBAAkB,EAAE,KARU;AAS9BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AADE;AATc,CAAjB,CAAf;AAgBA,OAAO,MAAMC,WAAN,SAA0Bd,KAAK,CAACe,SAAhC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXV,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,MAAM,CACHe,KADH,CACS;AACLA,MAAAA,KAAK,EAAElB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVa,KADT,EAaGmB,IAbH,CAaSC,MAAD,IACJ,KAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BhB,MAAAA,IAAI,EAAEc,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8B,CAA9B,EAAiCnB;AADX,KAAhB,CAAd,CAdJ;AAkBD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,WAAO3B,KAAK,CACT4B,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,MADV,EAEJA,MAFI,CAEGC,GAFH,CAEQC,SAAD,iBACV;AAEE,MAAA,SAAS,EAAEA,SAAS,CAACC,UAAV,KAAyB,IAAzB,GAAgC,eAAhC,GAAkD,MAF/D;AAAA,iBAIGD,SAAS,CAACC,UAAV,KAAyB,IAAzB,gBACC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EAPJ,eAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAED,SAAS,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA,OACOC,IAAI,CAACC,MAAL,KAAgB,EADvB;AAAA;AAAA;AAAA;AAAA,YAHG,CAAP;AAqBD;;AAnD8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport gql from 'graphql-tag';\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  uri: 'http://localhost:4000/graphql',\n\n  // Provide some optional constructor fields\n  name: 'react-web-client',\n  version: '1.3',\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network',\n    },\n  },\n});\n\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  componentDidMount() {\n    client\n      .query({\n        query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n              }\n            }\n          }\n        `,\n      })\n      .then((result) =>\n        this.setState((prevState) => ({\n          name: result.data.category.products[0].name,\n        }))\n      );\n  }\n\n  render() {\n    return items\n      .find((x) => x.images)\n      .images.map((imgObject) => (\n        <div\n          key={Math.random() * 10}\n          className={imgObject.outOfStock === true ? \"card-inactive\" : \"card\"}\n        >\n          {imgObject.outOfStock === true ? (\n            <p className=\"out-of-stock\">Out of stock</p>\n          ) : (\n            \"\"\n          )}\n          {}\n          <img className=\"item-image\" src={imgObject.image}></img>\n          <img className=\"buy-icon\" src=\"./buy-icon.svg\"></img>\n          <div className=\"item-info\">\n            <p>Apollo Running Short</p>\n            <p className=\"price\">$50.00</p>\n          </div>\n        </div>\n      ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}