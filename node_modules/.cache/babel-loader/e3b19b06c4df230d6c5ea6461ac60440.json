{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx\";\nimport React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductWrapper extends React.Component {\n  constructor() {\n    super();\n  }\n\n  setAttributes(value) {\n    this.setState({\n      attributes: value\n    });\n  }\n\n  isAllSelected(product, attributes) {\n    for (let attr of product.attributes) {\n      if (attributes[attr.id] === undefined) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    var _product$prices$find;\n\n    const {\n      product,\n      mainImage,\n      setAttributes,\n      attributes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-image-wrapper\",\n        children: [product.inStock ? \"\" : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"out-of-stock\",\n          children: \"Out of stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mainImage.length > 0 ? mainImage : product.gallery[0],\n          alt: product.id,\n          className: \"main-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtons, {\n          product: product,\n          attributes: attributes,\n          setAttributes: this.setAttributes.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [currenciesSymbols[this.props.selectedCurrency] || '$', \" \", (_product$prices$find = product.prices.find(x => x.currency === this.props.selectedCurrency)) === null || _product$prices$find === void 0 ? void 0 : _product$prices$find.amount]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.isAllSelected() && this.props.addCartItem({ ...product,\n            attrValues: this.state.attributes\n          }),\n          className: 'add-to-cart-button ' + (this.isAllSelected(product, attributes) && product.inStock ? '' : 'add-to-cart-button-disabled'),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-description\",\n          dangerouslySetInnerHTML: {\n            __html: product.description\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedCurrency: state.currencies.selected,\n    products: state.products.list,\n    categories: state.categories.list\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addCartItem,\n  selectCategory,\n  requestProducts\n})(ProductWrapper);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/src/components/product/ProductWrapper.jsx"],"names":["React","currenciesSymbols","ToggleButtons","ProductWrapper","Component","constructor","setAttributes","value","setState","attributes","isAllSelected","product","attr","id","undefined","render","mainImage","props","inStock","length","gallery","brand","name","bind","selectedCurrency","prices","find","x","currency","amount","Math","random","addCartItem","attrValues","state","__html","description","mapStateToProps","currencies","selected","products","list","categories","connect","selectCategory","requestProducts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,OAAO,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAChDC,EAAAA,WAAW,GAAG;AACV;AACH;;AACDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AACVC,MAAAA,UAAU,EAAEF;AADF,KAAd;AAGH;;AAGDG,EAAAA,aAAa,CAACC,OAAD,EAAUF,UAAV,EAAsB;AAC/B,SAAK,IAAIG,IAAT,IAAiBD,OAAO,CAACF,UAAzB,EAAqC;AACjC,UAAIA,UAAU,CAACG,IAAI,CAACC,EAAN,CAAV,KAAwBC,SAA5B,EAAuC;AACnC,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA;;AAEL,UAAM;AAAEJ,MAAAA,OAAF;AAAWK,MAAAA,SAAX;AAAsBV,MAAAA,aAAtB;AAAqCG,MAAAA;AAArC,QAAoD,KAAKQ,KAA/D;AAEA,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACH;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,mBACKN,OAAO,CAACO,OAAR,GAAkB,EAAlB,gBAAuB;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD5B,eAEI;AAAK,UAAA,GAAG,EAAEF,SAAS,CAACG,MAAV,GAAmB,CAAnB,GACJH,SADI,GAEJL,OAAO,CAACS,OAAR,CAAgB,CAAhB,CAFN;AAGI,UAAA,GAAG,EAAET,OAAO,CAACE,EAHjB;AAII,UAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eASH;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA,gCACI;AAAA,oBAAKF,OAAO,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIV,OAAO,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,aAAD;AACI,UAAA,OAAO,EAAEX,OADb;AAEI,UAAA,UAAU,EAAEF,UAFhB;AAGI,UAAA,aAAa,EAAE,KAAKH,aAAL,CAAmBiB,IAAnB,CAAwB,IAAxB;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAuB,UAAA,SAAS,EAAC,OAAjC;AAAA,qBACKtB,iBAAiB,CAAC,KAAKgB,KAAL,CAAWO,gBAAZ,CAAjB,IAAkD,GADvD,+BAC6Db,OAAO,CAACc,MAAR,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,KAAKX,KAAL,CAAWO,gBAAnD,CAD7D,yDAC6D,qBAAsEK,MADnI;AAAA,WAAQC,IAAI,CAACC,MAAL,EAAR;AAAA;AAAA;AAAA;AAAA,gBATJ,eAWI;AACI,UAAA,OAAO,EAAE,MAAM,KAAKrB,aAAL,MAAwB,KAAKO,KAAL,CAAWe,WAAX,CAAuB,EAAE,GAAGrB,OAAL;AAAcsB,YAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWzB;AAArC,WAAvB,CAD3C;AAEI,UAAA,SAAS,EAAE,yBAA0B,KAAKC,aAAL,CAAmBC,OAAnB,EAA4BF,UAA5B,CAAD,IAA6CE,OAAO,CAACO,OAArD,GAA+D,EAA/D,GAAoE,6BAA7F,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAgBI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,uBAAuB,EAAE;AAAEiB,YAAAA,MAAM,EAAExB,OAAO,CAACyB;AAAlB;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA,SAAUzB,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cATG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AA4BH;;AApD+C;;AAuDpD,MAAMwB,eAAe,GAAGH,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,gBAAgB,EAAEU,KAAK,CAACI,UAAN,CAAiBC,QADhC;AAEHC,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeC,IAFtB;AAGHC,IAAAA,UAAU,EAAER,KAAK,CAACQ,UAAN,CAAiBD;AAH1B,GAAP;AAKH,CAND;;AAQA,eAAeE,OAAO,CAClBN,eADkB,EAElB;AAAEL,EAAAA,WAAF;AAAeY,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAFkB,CAAP,CAGb1C,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { currenciesSymbols } from '../../constants';\nimport ToggleButtons from \"./ToggleButtons\";\n\nexport class ProductWrapper extends React.Component {\n    constructor() {\n        super();\n    }\n    setAttributes(value) {\n        this.setState({\n            attributes: value\n        });\n    }\n\n\n    isAllSelected(product, attributes) {\n        for (let attr of product.attributes) {\n            if (attributes[attr.id] === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render() {\n\n        const { product, mainImage, setAttributes, attributes } = this.props;\n\n        return <div className=\"product-wrapper\">\n            <div className=\"main-image-wrapper\">\n                {product.inStock ? \"\" : <p className=\"out-of-stock\">Out of stock</p>}\n                <img src={mainImage.length > 0\n                    ? mainImage\n                    : product.gallery[0]}\n                    alt={product.id}\n                    className=\"main-image\"></img>\n            </div>\n            <div key={product.id} className=\"product-info\">\n                <h3>{product.brand}</h3>\n                <p>{product.name}</p>\n                <ToggleButtons\n                    product={product}\n                    attributes={attributes}\n                    setAttributes={this.setAttributes.bind(this)}\n                />\n                <h4>Price:</h4>\n                <p key={Math.random()} className=\"price\">\n                    {currenciesSymbols[this.props.selectedCurrency] || '$'} {product.prices.find(x => x.currency === this.props.selectedCurrency)?.amount}</p>\n                <button\n                    onClick={() => this.isAllSelected() && this.props.addCartItem({ ...product, attrValues: this.state.attributes })}\n                    className={'add-to-cart-button ' + ((this.isAllSelected(product, attributes)) && product.inStock ? '' : 'add-to-cart-button-disabled')}>\n                    Add to cart\n            </button>\n                <div className=\"product-description\" dangerouslySetInnerHTML={{ __html: product.description }}></div>\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedCurrency: state.currencies.selected,\n        products: state.products.list,\n        categories: state.categories.list\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { addCartItem, selectCategory, requestProducts }\n)(ProductWrapper);"]},"metadata":{},"sourceType":"module"}