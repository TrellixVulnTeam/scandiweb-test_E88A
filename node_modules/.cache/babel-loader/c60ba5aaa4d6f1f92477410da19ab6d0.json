{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx\";\nimport React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../ClientApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      gallery: [],\n      category: \"\"\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n                gallery\n              }\n            }\n          }\n        `\n    }).then(result => this.setState(prevState => ({\n      name: result.data.category.products.map(prod => prod.name),\n      gallery: result.data.category.products.map(prod => prod.gallery)\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buy-icon\",\n        src: \"./buy-icon.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Apollo Running Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: \"$50.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, Math.random() * 10, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/category/ProductCard.jsx"],"names":["React","items","gql","client","ProductCard","Component","constructor","props","state","names","gallery","category","componentDidMount","query","then","result","setState","prevState","name","data","products","map","prod","render","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAGA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,MAAM,CACHU,KADH,CACS;AACLA,MAAAA,KAAK,EAAEX,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXa,KADT,EAcGY,IAdH,CAcSC,MAAD,IACJ,KAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,MAAAA,IAAI,EAAEH,MAAM,CAACI,IAAP,CAAYR,QAAZ,CAAqBS,QAArB,CAA8BC,GAA9B,CAAmCC,IAAD,IAAUA,IAAI,CAACJ,IAAjD,CADsB;AAE5BR,MAAAA,OAAO,EAAEK,MAAM,CAACI,IAAP,CAAYR,QAAZ,CAAqBS,QAArB,CAA8BC,GAA9B,CAAmCC,IAAD,IAAUA,IAAI,CAACZ,OAAjD;AAFmB,KAAhB,CAAd,CAfJ;AAoBD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAUE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA,OACOC,IAAI,CAACC,MAAL,KAAgB,EADvB;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAvD8C","sourcesContent":["import React from \"react\";\nimport items from \"../../shared/itemImages\";\nimport gql from \"graphql-tag\";\nimport { client } from \"../ClientApi\";\n\n\nexport class ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      gallery: [],\n      category: \"\",\n    };\n  }\n\n  componentDidMount() {\n    client\n      .query({\n        query: gql`\n          query GetProds {\n            category {\n              products {\n                name\n                id\n                gallery\n              }\n            }\n          }\n        `,\n      })\n      .then((result) =>\n        this.setState((prevState) => ({\n          name: result.data.category.products.map((prod) => prod.name),\n          gallery: result.data.category.products.map((prod) => prod.gallery),\n        }))\n      );\n  }\n\n  render() {\n    return (\n      <div\n        key={Math.random() * 10}\n        //   className={imgObject.outOfStock === true ? \"card-inactive\" : \"card\"}\n      >\n        {/* {imgObject.outOfStock === true ? (\n            <p className=\"out-of-stock\">Out of stock</p>\n          ) : (\n            \"\"\n          )} */}\n        {/* <img className=\"item-image\" src={imgObject.image}></img> */}\n        <img\n          className=\"buy-icon\"\n          src=\"./buy-icon.svg\"\n        ></img>\n        <div className=\"item-info\">\n          <p>Apollo Running Short</p>\n          <p className=\"price\">$50.00</p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}