{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ToggleButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null\n    };\n  }\n\n  onValueChange(event) {\n    this.setState({\n      selectedOption: event.target.value\n    });\n  }\n\n  render() {\n    {\n      console.log(this.checked);\n    }\n    return this.props.products.map(x => x.map(product => product.id === this.props.product && product.attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: attribute.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes-wrapper\",\n        children: attribute.items.map(item => attribute.type === \"swatch\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onChange: this.onValueChange(),\n          className: \"attribute-button\",\n          style: {\n            backgroundColor: item.value\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onChange: event => this.onValueChange,\n          className: \"attribute-button\",\n          children: item.value\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 47\n        }, this))\n      }, attribute.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }, this))));\n  }\n\n}","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/ToggleButtons.js"],"names":["React","ToggleButtons","Component","constructor","props","state","selectedOption","onValueChange","event","setState","target","value","render","console","log","checked","products","map","x","product","id","attributes","attribute","items","item","type","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AACZH,MAAAA,cAAc,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADjB,KAAd;AAGD;;AAEHC,EAAAA,MAAM,GAAG;AACL;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB;AAA0B;AAC3B,WACI,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,IAAIA,CAAC,CACzBD,GADwB,CACpBE,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAe,KAAKhB,KAAL,CAAWe,OAA1B,IACTA,OAAO,CAACE,UAAR,CACEJ,GADF,CACMK,SAAS,iBACV;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA,kBAAKA,SAAS,CAACF;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACKE,SAAS,CAACC,KAAV,CACIN,GADJ,CACQO,IAAI,IAAIF,SAAS,CAACG,IAAV,KAAmB,QAAnB,gBACP;AACE,UAAA,QAAQ,EAAE,KAAKlB,aAAL,EADZ;AAEE,UAAA,SAAS,EAAC,kBAFZ;AAIE,UAAA,KAAK,EAAE;AAAEmB,YAAAA,eAAe,EAAEF,IAAI,CAACb;AAAxB;AAJT,WAGOa,IAAI,CAACJ,EAHZ;AAAA;AAAA;AAAA;AAAA,gBADO,gBAMP;AACE,UAAA,QAAQ,EAAGZ,KAAD,IAAW,KAAKD,aAD5B;AAEE,UAAA,SAAS,EAAC,kBAFZ;AAAA,oBAGiBiB,IAAI,CAACb;AAHtB,WAGOa,IAAI,CAACJ,EAHZ;AAAA;AAAA;AAAA;AAAA,gBAPT;AADL,SAAyCE,SAAS,CAACF,EAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,CAFkB,CAA7B,CADJ;AAwBH;;AAxC8C","sourcesContent":["import React from \"react\";\n\nexport class ToggleButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: null,\n        }\n    }\n\n    onValueChange(event) {\n        this.setState({\n          selectedOption: event.target.value\n        });\n      }\n\n    render() {\n        {console.log(this.checked)}\n        return (\n            this.props.products.map(x => x\n                .map(product => product.id === this.props.product\n                    && product.attributes\n                        .map(attribute =>\n                            <div className=\"attribute-buttons\">\n                                <h4>{attribute.id}</h4>\n                                <div className=\"attributes-wrapper\" key={attribute.id}>\n                                    {attribute.items\n                                        .map(item => attribute.type === \"swatch\"\n                                            ? <button \n                                                onChange={this.onValueChange()}\n                                                className=\"attribute-button\"\n                                                key={item.id}\n                                                style={{ backgroundColor: item.value }}></button>\n                                            : <button\n                                                onChange={(event) => this.onValueChange}\n                                                className=\"attribute-button\"\n                                                key={item.id}>{item.value}</button>\n                                        )}\n                                </div>\n                            </div>\n\n                        ))))\n    }\n}"]},"metadata":{},"sourceType":"module"}