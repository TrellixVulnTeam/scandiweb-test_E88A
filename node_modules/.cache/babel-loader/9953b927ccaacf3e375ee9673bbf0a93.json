{"ast":null,"code":"var _jsxFileName = \"/Users/val/work/scandiweb-test/my-app/src/components/header/CurrenciesDropdown.jsx\";\nimport React from \"react\"; //import FontAwesome from \"react-fontawesome\";\n\nimport { connect } from \"react-redux\";\nimport { selectCurrency, requestCurrencies } from '../../redux/actions/currencies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrenciesDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleList = () => {\n      this.setState(prevState => ({\n        isListOpen: !prevState.isListOpen\n      }));\n    };\n\n    this.selectItem = item => {\n      const {\n        resetThenSet\n      } = this.props;\n      const {\n        title,\n        id,\n        key\n      } = item;\n      this.setState({\n        headerTitle: title[0],\n        isListOpen: false\n      }, () => resetThenSet(id, key));\n    };\n\n    this.state = {\n      isListOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestCurrencies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"dd-header\",\n        onClick: this.toggleList,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.isListOpen ? \"dd-header-title open\" : \"dd-header-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), isListOpen ? /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-down\",\n          size: \"2x\",\n          className: \"open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesome, {\n          name: \"angle-up\",\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), isListOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"list\",\n        className: \"dd-list\",\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"dd-list-item\",\n          onClick: () => this.selectItem(item),\n          children: [item.title, \" \", item.selected]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }, this), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return { ...state.currencies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  requestCurrencies,\n  selectCurrency\n})(CurrenciesDropdown);","map":{"version":3,"sources":["/Users/val/work/scandiweb-test/my-app/src/components/header/CurrenciesDropdown.jsx"],"names":["React","connect","selectCurrency","requestCurrencies","CurrenciesDropdown","Component","constructor","props","toggleList","setState","prevState","isListOpen","selectItem","item","resetThenSet","title","id","key","headerTitle","state","componentDidMount","render","list","map","selected","mapStateToProps","currencies"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,gCAAlD;;;AAEA,MAAMC,kBAAN,SAAiCJ,KAAK,CAACK,SAAvC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,UAXmB,GAWN,MAAM;AACf,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC1BC,QAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADG,OAAhB,CAAd;AAGH,KAfkB;;AAAA,SAiBnBC,UAjBmB,GAiBLC,IAAD,IAAU;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKP,KAA9B;AACA,YAAM;AAAEQ,QAAAA,KAAF;AAASC,QAAAA,EAAT;AAAaC,QAAAA;AAAb,UAAqBJ,IAA3B;AAEA,WAAKJ,QAAL,CACI;AACIS,QAAAA,WAAW,EAAEH,KAAK,CAAC,CAAD,CADtB;AAEIJ,QAAAA,UAAU,EAAE;AAFhB,OADJ,EAKI,MAAMG,YAAY,CAACE,EAAD,EAAKC,GAAL,CALtB;AAOH,KA5BkB;;AAEf,SAAKE,KAAL,GAAa;AACTR,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,KAAL,CAAWJ,iBAAX;AACH;;AAqBDkB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAA4C,QAAA,OAAO,EAAE,KAAKb,UAA1D;AAAA,gCACI;AACI,UAAA,SAAS,EAAE,KAAKW,KAAL,CAAWR,UAAX,GAAwB,sBAAxB,GAAiD;AADhE;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMKA,UAAU,gBACP,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC,IAApC;AAAyC,UAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADO,gBAGP,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAaKA,UAAU,iBAAI;AAAK,QAAA,IAAI,EAAC,MAAV;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA,kBACVW,IAAI,CAACC,GAAL,CAAUV,IAAD,iBACN;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,cAFd;AAII,UAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAJnB;AAAA,qBAMKA,IAAI,CAACE,KANV,OAMkBF,IAAI,CAACW,QANvB;AAAA,WAGSX,IAAI,CAACG,EAHd;AAAA;AAAA;AAAA;AAAA,gBADH;AADU;AAAA;AAAA;AAAA;AAAA,cAbnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AA7D4C;;AAgEjD,MAAMS,eAAe,GAAGN,KAAK,IAAI;AAC7B,SAAO,EAAE,GAAGA,KAAK,CAACO;AAAX,GAAP;AACH,CAFD;;AAIA,eAAezB,OAAO,CAClBwB,eADkB,EAElB;AAAEtB,EAAAA,iBAAF;AAAqBD,EAAAA;AAArB,CAFkB,CAAP,CAGbE,kBAHa,CAAf","sourcesContent":["import React from \"react\";\n//import FontAwesome from \"react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { selectCurrency, requestCurrencies } from '../../redux/actions/currencies'\n\nclass CurrenciesDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isListOpen: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.requestCurrencies();\n    }\n\n    toggleList = () => {\n        this.setState((prevState) => ({\n            isListOpen: !prevState.isListOpen,\n        }));\n    };\n\n    selectItem = (item) => {\n        const { resetThenSet } = this.props;\n        const { title, id, key } = item;\n\n        this.setState(\n            {\n                headerTitle: title[0],\n                isListOpen: false,\n            },\n            () => resetThenSet(id, key)\n        );\n    };\n\n    render() {\n\n        return (\n            <div className=\"dd-wrapper\">\n                <button type=\"button\" className=\"dd-header\" onClick={this.toggleList}>\n                    <div\n                        className={this.state.isListOpen ? \"dd-header-title open\" : \"dd-header-title\"}\n                    >\n                        {}\n                    </div>\n                    {isListOpen ? (\n                        <FontAwesome name=\"angle-down\" size=\"2x\" className=\"open\" />\n                    ) : (\n                        <FontAwesome name=\"angle-up\" size=\"2x\" />\n                    )}\n                </button>\n                {isListOpen && <div role=\"list\" className=\"dd-list\">\n                    {list.map((item) => (\n                        <button\n                            type=\"button\"\n                            className=\"dd-list-item\"\n                            key={item.id}\n                            onClick={() => this.selectItem(item)}\n                        >\n                            {item.title} {item.selected}\n                        </button>\n                    ))}\n                </div>}}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { ...state.currencies };\n};\n\nexport default connect(\n    mapStateToProps,\n    { requestCurrencies, selectCurrency}\n)(CurrenciesDropdown);"]},"metadata":{},"sourceType":"module"}